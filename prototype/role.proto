package msg.role;
import "roletype.proto";

//
// 命令字定义
//
enum eMessageRole
{
eMessageRole_RoleLogin_C    		 	= 0x1001; 	// 角色登录
eMessageRole_RoleList_S  			 	= 0x1002; 	// 角色列表
eMessageRole_CreateRole_C   		 	= 0x1003; 	// 创建角色
eMessageRole_CreateRole_S   		 	= 0x1004; 	// 创建角色成功
eMessageRole_EnterGame_C			 	= 0x1005; 	// 进入游戏
eMessageRole_LoginSuccess_S			 	= 0x1006;	// 登录成功
eMessageRole_RoleDetail_S   		 	= 0x1007; 	// 角色详细信息
eMessageRole_Chat_CS				 	= 0x1008;	// 角色聊天
eMessageRole_RoleLogout_C			 	= 0x1009;	// 角色登出
eMessageRole_OpendSystem_S			 	= 0x100A;	// 开放的系统信息
eMessageRole_AddonStrength_S		 	= 0x100B;	// 额外体力变化
eMessageRole_ExpChange_S			 	= 0x100D;	// 玩家经验变化
eMessageRole_AttrChange_S			 	= 0x100E;	// 玩家属性变化列表
eMessageRole_Train_C				 	= 0x100F;	// 培养请求
eMessageRole_Train_S				 	= 0x1010;	// 培养响应
eMessageRole_TrainSave_C			 	= 0x1011;	// 培养保存
eMessageRole_TrainSave_S			 	= 0x1012;	// 培养保存
eMessageRole_TrainDiscard_C			 	= 0x1013;	// 培养放弃
eMessageRole_ResetPotency_C			 	= 0x1014;	// 重置潜力点
eMessageRole_ResetPotency_S			 	= 0x1015;	// 重置潜力点
eMessageRole_GetRoleInfo_C			 	= 0x1016;	// 获取角色信息
eMessageRole_GetRoleInfo_S			 	= 0x1017;	// 返回角色信息
eMessageRole_BannedAccount_S		 	= 0x1018;	// 玩家被封号的消息
eMessageRole_Levelup_S				 	= 0x1019;	// 玩家升级的消息
eMessageRole_GetBuffList_C			 	= 0x101A;	// 获取BUFF列表的请求
eMessageRole_BuffList_S				 	= 0x101B;	// 角色的BUFF列表
eMessageRole_SetNewbieGuide_C        	= 0x101C;  // 设置玩家新手引导步骤
eMessageRole_ChangeRoleName_C		 	= 0x101D;	// 重置名字
eMessageRole_ChangeRoleName_S		 	= 0x101E;	// 重置名字(服务器返回)
eMessageRole_RoleNameChange_SC		 	= 0x101F;	// 玩家重置名字广播
eMessageRole_LearnHeart_C			 	= 0x1020;	// 学习经脉
eMessageRole_LearnHeart_S			 	= 0x1021;	// 学习经脉(服务器返回)
eMessageRole_ResetHeart_C			 	= 0x1022;	// 归元筋脉
eMessageRole_ResetHeart_S			 	= 0x1023;	// 归元筋脉(服务器返回)
eMessageRole_BroadcastShopLimit_S	 	= 0x1024;	// 商城区服限制道具购买广播
eMessageRole_RoleVariable_C			 	= 0x1025;	// 获取玩家临时数据
eMessageRole_RoleVariable_S			 	= 0x1026;	// 获取玩家临时数据(服务器返回)
eMessageRole_GetGreetPopPrise_C		 	= 0x1027;	// 获取人气宝箱
eMessageRole_GetGreetPopPrise_S		 	= 0x1028;	// 获取人气宝箱(服务器返回)
eMessageRole_GetSkillList_C			 	= 0x1029;	// 获取战士技能
eMessageRole_GetSkillList_S			 	= 0x102A;	// 获取战士技能(服务器返回)
eMessageRole_UpGradeSkill_C			 	= 0x102B;	// 技能升级
eMessageRole_UpGradeSkill_S			 	= 0x102C;	// 技能升级(服务器返回)
eMessageRole_InlayFuStone_C			 	= 0x102D;	// 技能符石镶嵌
eMessageRole_InlayFuStone_S			 	= 0x102E;	// 技能符石镶嵌(服务器返回)
eMessageRole_RemoveFuStone_C		 	= 0x102F;	// 移除技能符石
eMessageRole_RemoveFuStone_S		 	= 0x1030;	// 移除技能符石(服务器返回)
eMessageRole_SendLoadUpd_C           	= 0x1031;  // 发送loadudp
eMessageRole_SetNewbieAct_C          	= 0x1032;  // 设置新手活动UDP
eMessageRole_GetRecruitSoldier_C	 	= 0x1033;	// 获取可以招募的宝宝列表
eMessageRole_GetRecruitSoldier_S 	 	= 0x1034;	// 可以招募的宝宝列表
eMessageRole_RecruitSoldier_C 		 	= 0x1035;	// 招募宝宝
eMessageRole_RecruitSoldier_S 		 	= 0x1036;	// 招募宝宝的结果
eMessageRole_SoldierStatus_CS		 	= 0x1037;	// 设置/获取宝宝的状态
eMessageRole_GetSoldierList_C		 	= 0x1038;	// 获取战士列表
eMessageRole_GetSoldierList_S 		 	= 0x1039;	// 战士列表返回
eMessageRole_UpdateYellowInfo_C      	= 0x103A;  // 更新黄钻信息
eMessageRole_UpdateYellowInfo_S      	= 0x103B;  // 更新黄钻信息(返回)
eMessageRole_GetYellowRewardInfo_C   	= 0x103C;  // 获取黄钻福利领取信息
eMessageRole_GetYellowRewardInfo_S   	= 0x103D;  // 获取黄钻福利领取信息(返回)
eMessageRole_GetYellowNewBird_C      	= 0x103E;  // 获取黄钻新手礼包
eMessageRole_GetYellowEveryDay_C     	= 0x103F;  // 获取黄钻每日礼包
eMessageRole_GetYellowUpLevel_C      	= 0x1040;  // 获取黄钻升级礼包
eMessageRole_SoldierRefine_C		 	= 0x1041;	// 战士熔炼
eMessageRole_SoldierRefine_S 		 	= 0x1042;	// 战士熔炼返回
eMessageRole_GetVipLevelRewardInfo_C 	= 0x1043;  // 获取vip等级奖励领取信息
eMessageRole_GetVipLevelRewardInfo_S 	= 0x1044;  // 获取vip等级奖励领取信息(返回)
eMessageRole_GetVipLevelReward_C     	= 0x1045;  // 领取vip等级奖励
eMessageRole_GetGainCoinInfo_C       	= 0x1046;  // 获取转金币信息
eMessageRole_GetGainCoinInfo_S       	= 0x1047;  // 获取转金币信息(返回)
eMessageRole_ExchangeCoin_C          	= 0x1048;  // 赚金币招财进宝
eMessageRole_ExchangeCoin_S          	= 0x1049;  // 赚金币招财进宝(返回)
eMessageRole_GetGainCoinQuestID_C    	= 0x104A;  // 赚金币获取题目ID
eMessageRole_GetGainCoinQuestID_S    	= 0x104B;  // 赚金币获取题目ID(返回)
eMessageRole_GetGainCoinAnswer_C     	= 0x104C;  // 赚金币获取答案
eMessageRole_GetGainCoinAnswer_S     	= 0x104D;  // 赚金币获取答案(返回)
eMessageRole_MakePill_C              	= 0x104E;  // 炼丹请求
eMessageRole_MakePill_S              	= 0x104F;  // 炼丹返回
eMessageRole_MovePill_C              	= 0x1050;  // 装备丹药
eMessageRole_MovePill_S              	= 0x1051;  // 装备丹药返回
eMessageRole_UpPillLV_C              	= 0x1052;  // 升级丹药
eMessageRole_UpPillLV_S              	= 0x1053;  // 升级丹药返回
eMessageRole_DecomPill_C             	= 0x1054;  // 分解丹药
eMessageRole_DecomPill_S             	= 0x1055;  // 分解丹药返回
eMessageRole_ConvertPill_C           	= 0x1056;  // 兑换丹药
eMessageRole_ConvertPill_S           	= 0x1057;  // 兑换丹
eMessageRole_GetPillRepo_C           	= 0x1058;  // 获取丹药仓库
eMessageRole_GetPillRepo_S           	= 0x1059;  // 返回丹药仓库
eMessageRole_GetPillFurnace_C        	= 0x105A;  // 获取炼丹炉
eMessageRole_GetPillFurnace_S        	= 0x105B;  // 返回炼丹炉
eMessageRole_MeditateStartTime_C     	= 0x105C;  // 修炼开始时间
eMessageRole_MeditateStartTime_S     	= 0x105D;  // 修炼开始时间返回
eMessageRole_GetMeditateExp_C        	= 0x105E;  // 获取修炼经验
eMessageRole_GetMeditateExp_S        	= 0x105F;  // 获取修炼经验
eMessageRole_GetRankFirstInfo_C      	= 0x1060;  // 获取排行榜一级信息
eMessageRole_GetRankFirstInfo_S      	= 0x1061;  // 获取排行榜一级信息(返回)
eMessageRole_GetRankDetailedInfo_C   	= 0x1062;  // 获取排行榜二级信息
eMessageRole_GetRankDetailedInfo_S   	= 0x1063;  // 获取排行榜二级信息(返回)
eMessageRole_GetWorshipCount_C       	= 0x1064;  // 获取膜拜信息
eMessageRole_GetWorshipCount_S       	= 0x1065;  // 获取膜拜信息（返回）
eMessageRole_Worship_C               	= 0x1066;  // 膜拜
eMessageRole_Worship_S               	= 0x1067;  // 膜拜（返回）
eMessageRole_GetBuyStrengthCount_C   	= 0x1068;  // 获取购买体力次数
eMessageRole_GetBuyStrengthCount_S   	= 0x1069;  // 获取购买体力次数(返回)
eMessageRole_BuyStrength_C           	= 0x106A;  // 购买体力
eMessageRole_GetMonsterTower_C          = 0x106B;   // 获取万妖塔信息
eMessageRole_GetMonsterTower_S          = 0x106C;   // 获取万妖塔信息(服务器返回)
eMessageRole_EnterMonsterTowerFloor_C   = 0x106D;   // 进入某层
eMessageRole_EnterMonsterTowerFloor_S   = 0x106E;   // 进入某层(服务器返回)
eMessageRole_ResetMonsterTower_C        = 0x106F;   // 重置万妖塔
eMessageRole_ResetMonsterTower_S        = 0x1070;   // 重置万妖塔(服务器返回)
eMessageRole_BuyMonsterTowerReset_C     = 0x1071;   // 购买重置
eMessageRole_BuyMonsterTowerReset_S     = 0x1072;   // 购买重置(服务器返回)
eMessageRole_ViewMonsterTower_C         = 0x1073;   // 窥探
eMessageRole_ViewMonsterTower_S         = 0x1074;   // 窥探(服务器返回)
eMessageRole_GetTitleList_C             = 0x1075;   // 获取称号列表
eMessageRole_GetTitleList_S             = 0x1076;   // 获取称号列表(服务器返回)
eMessageRole_GetTitle_C                 = 0x1077;   // 获取称号信息
eMessageRole_GetTitle_S                 = 0x1078;   // 获取称号信息
eMessageRole_EquipTitle_C               = 0x1079;   // 装备称号
eMessageRole_UpdateTitle_S              = 0x107B;   // 称号更新
eMessageRole_GetGiftKeyReward_C         = 0x107C;   // 领取礼品Key奖励
eMessageRole_AddTitle_S					= 0x107D;	// 添加称号
eMessageRole_AddPills_S                 = 0x107E;   // 通知客户端更新丹药信息（显示效果）
eMessageRole_GetGirlList_C				= 0x107F;	// 获取(已收服)妖姬列表
eMessageRole_GetGirlList_S 				= 0x1080;	// 获取(已收服)妖姬列表(服务器返回)
eMessageRole_GetGirl_C 					= 0x1081;	// 获取单个妖姬具体信息
eMessageRole_GetGirl_S 					= 0x1082;	// 获取单个妖姬具体信息(服务器返回)
eMessageRole_UpdateGirl_S				= 0x1083;	// 妖姬状态变更(服务器返回)
eMessageRole_CollectGirl_C 				= 0x1084;	// 收集妖姬
eMessageRole_CollectGirl_S 				= 0x1085;	// 收集妖姬(服务器返回)
eMessageRole_LoveGirl_C                 = 0x1086;   // 缠绵
eMessageRole_LoveGirl_S                 = 0x1087;   // 缠绵（服务器返回）
eMessageRole_GiftGirl_C                 = 0x1088;   // 送礼给妖姬
eMessageRole_GiftGirl_S                 = 0x1089;   // 送礼给妖姬（服务器返回）
eMessageRole_SetGirlSleep_C             = 0x108A;   // 设置妖姬陪睡（自动结算，取消其他配睡妖姬）
eMessageRole_SetGirlSleep_S             = 0x108B;   // 设置妖姬陪睡（服务器返回）
eMessageRole_BuyGirlEnergy_C            = 0x108C;   // 购买妖姬精力
eMessageRole_BuyGirlEnergy_S            = 0x108D;   // 购买妖姬精力（服务器返回）
eMessageRole_GameLoadUdp_C              = 0x108E;   // 游戏加载发送udp
eMessageRole_PageButtonUdp_C            = 0x108F;   // 按钮序号
eMessageRole_GetLottery_C 				= 0x1090;	// 获取抽奖信息
eMessageRole_GetLottery_S 				= 0x1091;	// 抽奖信息
eMessageRole_GetSlotMachine_C			= 0x1092;	// 获取宝箱信息
eMessageRole_GetSlotMachine_S 			= 0x1093;	// 宝箱信息
eMessageRole_DrawSlotMachine_C 			= 0x1094;	// 抽奖
eMessageRole_DrawSlotMachine_S 			= 0x1095;	// 抽奖返回
eMessageRole_GetSoldierBookInfo_C       = 0x1096;   // 获取图鉴信息
eMessageRole_GetSoldierBookInfo_S       = 0x1097;   // 获取图鉴信息（返回）
eMessageRole_PrintSoldier_C             = 0x1098;   // 印刷宝宝

}

//
// 错误码定义
//
enum eErrorCodeRole
{
eErrorCodeRole_Success						= 0x000000;		// 成功

eErrorCodeRole_InvalidUnitID				= 0x100100;		// 非法的角色ID(前端主动关闭)
eErrorCodeRole_NewRoleFailed				= 0x100101;		// 初始化帐号失败(前端主动关闭)
eErrorCodeRole_LoadFromDBFailed				= 0x100102;		// 从数据库加载失败(前端主动关闭)
eErrorCodeRole_BannedAccount				= 0x100103;		// 被封号(前端主动关闭)
eErrorCodeRole_SystemBusy					= 0x100104;		// 系统繁忙(前端主动关闭)
eErrorCodeRole_VerifyFailed 				= 0x100105;		// 平台帐号验证失败(前端主动关闭)
eErrorCodeRole_AccountInvalid				= 0x100106;		// 获取游戏帐号失败(前端主动关闭)
eErrorCodeRole_InWhiteList                  = 0x100107;     // 在白名单中

eErrorCodeRole_InvalidRolename				= 0x100300;		// 角色名非法
eErrorCodeRole_RolenameConflict				= 0x100301;		// 角色名冲突
eErrorCodeRole_InvalidSoldierID				= 0x100302;		// 选择的角色非法
eErrorCodeRole_ServerInternal				= 0x100303;		// 系统内部出错
eErrorCodeRole_DuplicationOfName2           = 0x100304;     // 重名

eErrorCodeRole_Receiver_Offline				= 0x100800;		// 接收者不在线
eErrorCodeRole_NotInTeam					= 0x100801;		// 玩家不在组队中
eErrorCodeRole_InvalidScene					= 0x100802;		// 非法场景
eErrorCodeRole_SendMyself       			= 0x100803;     // 自己不允许和自己私聊
eErrorCodeRole_InvalidChatChannel			= 0x100804;     // 非法的频道
eErrorCodeRole_SenderOffline				= 0x100805;		// 发送方下线
eErrorCodeRole_ChatItemNotEnough			= 0x100806;		// 大喇叭道具不足
eErrorCodeRole_TransactionError				= 0x100807;		// 获取事务出错
eErrorCodeRole_InBlackList					= 0x100808;		// 该玩家在您的黑名单中，不可发送私聊
eErrorCodeRole_InOtherBlackList				= 0x100809;		// 该玩家已将您列入黑名单，无法看到您的发言
eErrorCodeRole_ChatTimeToShort              = 0x10080A;     // 聊天间隔太短
eErrorCodeRole_NotAllowedChat               = 0x10080B;     // 禁言
eErrorCodeRole_InvalidSoldier				= 0x100F00;		// 战士ID非法
eErrorCodeRole_NoTrainScheme				= 0x100F01;		// 没有可用的培养方案
eErrorCodeRole_InvalidTrainMethod 			= 0x100F02;		// 非法的培养方法
eErrorCodeRole_TrainAssetNotEnough			= 0x100F03;		// 培养资产不足
eErrorCodeRole_TrainItemsNotEnough			= 0x100F04;		// 培养丹不足
eErrorCodeRole_PotencyNotEnough				= 0x100F05;		// 潜力点不足
eErrorCodeRole_InvaildSoldier1				= 0x101100;		// 战士ID非法
eErrorCodeRole_InvaildSoldier2				= 0x101301;		// 战士ID非法
eErrorCodeRole_InvaildSoldier3				= 0x101400;		// 战士ID非法
eErrorCodeRole_ResetPotencyItem_NotEnough	= 0x101401;		// 重置丹不够
eErrorCodeRole_InvalidUnitID1               = 0x101600;		// 玩家ID非法
eErrorCodeRole_InvalidSoldier4				= 0x101601;		// 战士ID非法
eErrorCodeRole_SoldierIsAvailable			= 0x102001;		// 战士不存在
eErrorCodeRole_HeartIsComplete				= 0x102002;		// 心法已经全部学完
eErrorCodeRole_HeartConfigError				= 0x102003;		// 心法配置出错
eErrorCodeRole_LineConfigError				= 0x102004;		// 穴位配置出错
eErrorCodeRole_YuanqiNotEnough				= 0x102005;		// 元气不足
eErrorCodeRole_RoleNameNotNull				= 0x101D00;		// 角色名不能为空
eErrorCodeRole_SetRoleNameError				= 0x101D01;		// 设置角色名出错
eErrorCodeRole_SetRoleNameTError			= 0x101D02;		// 设置角色名事务出错
eErrorCodeRole_RoleTransactionError         = 0x101D03;     // 获取改名事务出错
eErrorCodeRole_NameIsSame                   = 0x101D04;     // 新名字和当前名字一样
eErrorCodeRole_DuplicationOfName            = 0x101D05;     // 重名
eErrorCodeRole_SoldierIsNull				= 0x102201;		// 玩家不存在
eErrorCodeRole_NoAcupoint					= 0x102202;		// 该角色未学习心法无法归元
eErrorCodeRole_ItemConfigError				= 0x102203;		// 重置心法道具出错
eErrorCodeRole_ResetHeartItemNotEnough		= 0x102204;		// 道具不足
eErrorCodeRole_SoldierHeartError			= 0x102205;		// 获取玩家已学心法出错
eErrorCodeRole_LineConfigError22			= 0x102206;		// 穴位配置出错
eErrorCodeRole_AddYuanqiError				= 0x102207;		// 添加玩家元气出错
eErrorCodeRole_PopPriseConfig				= 0x102800;		// 人气宝箱配置出错
eErrorCodeRole_BagNotEnoughSpace			= 0x102801;		// 背包空间不足
eErrorCodeRole_PopNotEnough					= 0x102802;		// 人气不足
eErrorCodeRole_PopPriseGot					= 0x102803;		// 奖励已经领取
eErrorCodeRole_NotAnySkillList				= 0x102900;		// 未学任何技能
eErrorCodeRole_SkillNotExist				= 0x102B01;		// 技能不存在
eErrorCodeRole_NotLearnSkill				= 0x102B02;		// 暂未学习该技能
eErrorCodeRole_SkillMaxLevel				= 0x102B03;		// 技能已学最大值
eErrorCodeRole_SkillPropError				= 0x102B04;		// 配置表出错
eErrorCodeRole_SkillLevelOver				= 0x102B05;		// 技能等级超出玩家等级
eErrorCodeRole_UpSkillNotEnoughCoin			= 0x102B06;		// 升级技能金币不足
eErrorCodeRole_UpSkillNotEnoughXiuWei		= 0x102B07;		// 升级技能修为不足
eErrorCodeRole_UpSkillFailed				= 0x102B08;		// 升级技能失败
eErrorCodeRole_ThisSpellIsNull				= 0x102B09;		// 非法技能id
eErrorCodeRole_UpgradeTypeError				= 0x102B0A;		// 升级方式出错
eErrorCodeRole_NotAnySkill0D				= 0x102D00;		// 未学习任何技能
eErrorCodeRole_NotLearnSkill0D				= 0x102D01;		// 未学习该技能
eErrorCodeRole_NotThisFuStone				= 0x102D02;		// 没有该符石
eErrorCodeRole_FuStoneNotMine				= 0x102D03;		// 没有该符石
eErrorCodeRole_FuStoneConfigError			= 0x102D04;		// 符石配置出错
eErrorCodeRole_FuStoneHaveInlayed			= 0x102D05;		// 技能已经存在符石
eErrorCodeRole_TypeNotAllowed				= 0x102D06;		// 符石类型不对
eErrorCodeRole_FuStoneInlayFailed			= 0x102D07;		// 符石镶嵌失败
eErrorCodeRole_NotAnySkill2F				= 0x102F00;		// 暂未学习任何技能
eErrorCodeRole_NotLearnSkill0F				= 0x102F01;		// 未学习该技能
eErrorCodeRole_NotInlayFuStone				= 0x102F02;		// 未镶嵌任何符石
eErrorCodeRole_FuStoneConfigError2F			= 0x102F03;		// 符石配置出错
eErrorCodeRole_BagNotEnoughSpace2F			= 0x102F04;		// 背包不足
eErrorCodeRole_InlayFuStoneFailed			= 0x102F05;		// 符石移除失败
eErrorCodeRole_AddFuStoneFailed				= 0x102F06;		// 添加符石失败

eErrorCodeRole_RescruitID_Error             = 0x103500;     // 招募ID非法
eErrorCodeRole_HaveSoldier                  = 0x103501;     // 玩家已经拥有该宝宝
eErrorCodeRole_Gamecoin_NotEnough           = 0x103502;     // 招募宝宝游戏币不足
eErrorCodeRole_Reputation_NotEnough         = 0x103503;     // 招募宝宝声望不足
eErrorCodeRole_RecruitSpalls_NotEnough      = 0x103504;     // 招募宝宝所需的元神不足
eErrorCodeRole_CannotFoundSoldier           = 0x103700;     // 非法的战士信息
eErrorCodeRole_NotSetHeroStatus             = 0x103701;     // 不能设置英雄的状态
eErrorCodeRole_SameStatus                   = 0x103702;     // 相同状态
eErrorCodeRole_BabyConfigError              = 0x103703;     // 宝宝配置出错
eErrorCodeRole_BabyBagFull                  = 0x103704;     // 包裹放不下宝宝碎片
eErrorCodeRole_Toomuch_Soldiers				= 0x103705;		// 太多出战的宝宝了
eErrorCodeRole_BabySpallConfigError         = 0x103706;     // 宝宝碎片配置出错

eErrorCodeRole_IsNotYellow                  = 0x103A01;      //不是黄钻
eErrorCodeRole_IsNotYellowReward            = 0x103A02;      //没有奖励可领取
eErrorCodeRole_YellowConfigErr              = 0x103A03;      //奖励配置错误
eErrorCodeRole_YellowBagIsFull              = 0x103A04;      //黄钻背包满了

eErrorCodeRole_CannotFoundSoldier1			= 0x104100;		// 熔炼的战士ID非法
eErrorCodeRole_NotRefineSoldider			= 0x104101;		// 不能熔炼英雄
eErrorCodeRole_SpallIDInvalid				= 0x104102;		// 熔炼的碎片非法
eErrorCodeRole_LevelTooHigh					= 0x104103;		// 战士等级太高了
eErrorCodeRole_SpallStackFull 				= 0x104104;		// 超过堆叠数量
eErrorCodeRole_BabyConfigError1             = 0x104105;     // 宝宝配置出错
eErrorCodeRole_BabySpallConfigError1 		= 0x104106;		// 宝宝碎片配置出错
eErrorCodeRole_Element_Dismatched 			= 0x104107;		// 元素类型不匹配
eErrorCodeRole_SpallNotEnough				= 0x104108;		// 碎片材料不足
eErrorCodeRole_MoneyNotEnough				= 0x104109;		// 元宝不足
eErrorCodeRole_GamecoinNotEnough			= 0x10410A;		// 游戏币不足
eErrorCodeRole_ReputationNotEnough			= 0x10410B;		// 声望不足
eErrorCodeRole_GetPanelError				= 0x10410C;		// 装备面板出错
eErrorCodeRole_BabyBagFull2 				= 0x10410D;		// 背包放不下脱卸的装备

eErrorCodeRole_VipLvQuestErr                = 0x104300;     // vip领取等级奖励客户端传值错误
eErrorCodeRole_VipLvConfigErr               = 0x104301;     // vip等级配置错误
eErrorCodeRole_VipLvBagIsFull               = 0x104302;     // vip等级背包满
eErrorCodeRole_VipLvIsZero                  = 0x104303;     // vip等级为零
eErrorCodeRole_VipLvHaveGet                 = 0x104304;     // vip等级奖励已经领取

eErrorCodeRole_GainCoinConfigErr            = 0x104800;     // 赚金币配置错误
eErrorCodeRole_ExchangeNumNotEnough         = 0x104801;     // 直接兑换次数已用完
eErrorCodeRole_GainCoinGoldNot              = 0x104802;     // 元宝不够
eErrorCodeRole_AnswerNumNot                 = 0x104803;     // 回答问题次数已用完
eErrorCodeRole_GainCoinClientErr            = 0x104804;     // 客户端请求数据错误
eErrorCodeRole_GainCoinBagIsFull            = 0x104805;     // 背包已满
eErrorCodeRole_GainCoinInCD                 = 0x104806;     //  问答CD
eErrorCodeRole_GainCoinVipLevelErr          = 0x104807;     // vip等级不够

eErrorCodeRole_FurnaceIsFull                = 0x104D01;     // 炼丹炉满
eErrorCodeRole_NotEnoughAnima               = 0x104D02;     // 灵气不足
eErrorCodeRole_RepoIsFull                   = 0x104D03;     // 丹药仓库满
eErrorCodeRole_NotEnoughPiece               = 0x104D04;     // 碎片不足
eErrorCodeRole_PillLvIsFull                 = 0x104D05;     // 丹药等级满
eErrorCodeRole_DressedSameType              = 0x104D06;     // 已经装备了同类型丹药
eErrorCodeRole_InvalidMakeType              = 0x104D07;     // 无效的炼丹类型
eErrorCodeRole_InvalidPillPlace             = 0x104D08;     // 无效位置
eErrorCodeRole_PillCanNotExchange           = 0x104D09;     // 丹药不能兑换
eErrorCodeRole_AnimaNotEnough               = 0x104D0A;     // 碎片不足
eErrorCodeRole_CannotMoveBack               = 0x104D0B;     // 不能移回炼丹炉
eErrorCodeRole_DressPillFailed              = 0x104D0C;     // 装备丹药失败
eErrorCodeRole_InvalidPillId                = 0x104D0D;     // 无效的丹药id/该位置没有丹药
eErrorCodeRole_InvalidDecomType             = 0x104D0E;     // 无效的分解位置/槽位
eErrorCodeRole_PillConfigErr                = 0x104D0F;     // 丹药读取配置错误
eErrorCodeRole_DressedNothing               = 0x104D10;     // 未穿戴丹药
eErrorCodeRole_PillSlotNotEmpty             = 0x104D11;     // 丹药孔非空
eErrorCodeRole_NotVIP                       = 0x104D12;     // 非VIP

eErrorCodeRole_WorshipCountFull             = 0x106000;     // 膜拜次数已满
eErrorCodeRole_WorshipIDIsIn                = 0x106001;     // 膜拜玩家已经被膜拜过
eErrorCodeRole_WorshipConfigErr             = 0x106002;     // 膜拜配置错误
eErrorCodeRole_WorshipIDErr                 = 0x106003;     // 膜拜ID玩家ID非法

eErrorCodeRole_BuyStrengthConfigErr              = 0x106800;     // 购买体力配置错误
eErrorCodeRole_BuyStrengthCountFull              = 0x106801;     // 购买体力背包满
eErrorCodeRole_BuyStrengthGoldNot                = 0x106802;     // 购买体力元宝不足

eErrorCodeRole_EnterTowerFloorFail          = 0x106B01; // 进入万妖塔失败
eErrorCodeRole_InvalidTowerID               = 0x106B02; // 非法塔ID

eErrorCodeRole_InvalidCurFloor              = 0x106F00; // 本塔未打不能重置
eErrorCodeRole_ResetTimesNotEnough          = 0x106F01; // 重置次数不够
eErrorCodeRole_VipConfigError               = 0x107100; // vip配置出错
eErrorCodeRole_BuyResetNumsIsFull           = 0x107101; // 购买次数已达上限
eErrorCodeRole_BuyResetGoldNotEnough        = 0x107102; // 购买元宝不足
eErrorCodeRole_BuyResetGoldNULL             = 0x107103; // 元宝配置出错

eErrorCodeRole_FloorsIsFight                = 0x107300; // 该层已经挑战过无法窥探
eErrorCodeRole_FloorsIsView                 = 0x107301; // 该门已经窥探过
eErrorCodeRole_ViewCountError               = 0x107302; // 已经全部窥探无需窥探
eErrorCodeRole_ViewGoldConfigError          = 0x107303; // 窥探元宝出错
eErrorCodeRole_ViewGoldNotEnough            = 0x107304; // 窥探元宝不够
eErrorCodeRole_ViewDoorsFail                = 0x107305; // 窥探失败

eErrorCodeRole_GiftKeyGetError              = 0x107C00; // giftkey验证流程错误
eErrorCodeRole_GiftKeyError                 = 0x107C01; // giftkey错误
eErrorCodeRole_GiftKeyZoneError             = 0x107C02; // giftkey区服错误
eErrorCodeRole_GiftKeyHaveUse               = 0x107C03; // giftkey已经使用过
eErrorCodeRole_GiftKeyTimeOut               = 0x107C04; // giftkey已经过期
eErrorCodeRole_GiftKeyBagFull               = 0x107C05; // 背包已满，奖励有邮件发放
eErrorCodeRole_GiftKeyOutOfTimes            = 0x107C06; // 超过使用次数

eErrorCodeRole_InvaildTitle                 = 0x107500; // 称号不存在
eErrorCodeRole_ExprieTitleNotEquip          = 0x107501; // 过期称号不能穿戴

eErrorCodeRole_InvalidGirlID                = 0x107502; // 妖姬id无效/不存在
eErrorCodeRole_GirlHasCollected             = 0x107503; // 妖姬已被收服
eErrorCodeRole_CollectGirlFailed            = 0x107504; // 妖姬收服失败（条件不满足或内存不足）
eErrorCodeRole_LoveTimesOutOfLimit          = 0x107505; // 超过缠绵次数
eErrorCodeRole_GiftTimesOutOfLimit          = 0x107506; // 超过送礼次数
eErrorCodeRole_GiftNotEnough                = 0x107507; // 礼物不存在或数量不足
eErrorCodeRole_QuestNotComplete             = 0x107508; // 任务条件不满足
eErrorCodeRole_LoveCD                       = 0x107509; // 缠绵CD中
eErrorCodeRole_InvalidGiftID                = 0x107510; // 无效的物品ID或不可被送
eErrorCodeRole_GirlIsSleep                  = 0x107511; // 妖姬陪睡中
eErrorCodeRole_ItemNotEnough                = 0x107512; // 物品不足（扣除失败）
eErrorCodeRole_InvalidCollectType           = 0x107513; // 无效的收服方式
eErrorCodeRole_GirlNotOpen                  = 0x107514; // 妖姬未开放
eErrorCodeRole_VipLvIsNotSatisfied          = 0x107515; // vip条件不满足
eErrorCodeRole_InvalidGirlStatus            = 0x107516; // 无效的妖姬状态
eErrorCodeRole_EnergyIsFull                 = 0x107517; // 精力满了
eErrorCodeRole_NegtiveEnergy                = 0x107518; // 精力为负值（服务器时间不正确）
eErrorCodeRole_EnergyNotEnough              = 0x107619; // 精力不足

eErrorCodeRole_MoneyNotEnough2				= 0x109400;	// 抽奖元宝不足
eErrorCodeRole_BagNotEnoughSpace3			= 0x109401;	// 背包空间不足

eErrorCodeRole_BabyBookConfigErr            = 0x109800; // 图鉴配置错误
eErrorCodeRole_SoldierLevelErr              = 0x109801; // 封印宝宝等级不够

}

message MessageRoleLogin
{
optional eMessageRole 	id   	 	= 1   	[default = eMessageRole_RoleLogin_C];
optional string 		account		= 2;	// 帐号
optional int32			zoneid 		= 3;	// 区服ID
optional PlatformInfo 	pf			= 4;	// 平台信息(暂时留空)
optional string 		clienthost 	= 5;	// 客户端地址(服务器填充)
}

message MessageRoleList
{
optional eMessageRole 	id   		= 1   	[default = eMessageRole_RoleList_S];
repeated RoleInfo 		infos  		= 2;
}

message MessageCreateRole
{
optional eMessageRole  	id   		= 1   	[default = eMessageRole_CreateRole_C];
optional string 		account     = 2;	// 平台帐号
optional string 		rolename    = 3;	// 角色名可选
optional int32			soldierid   = 4;	// 战士ID
optional string 		source		= 5;	// 来源via
optional string 		pfaccount 	= 6;	// 邀请者平台帐号
optional string         clienthost  = 7;    // 客户端地址( 服务器填充 )
}

message MessageNewbornRole
{
optional eMessageRole	id			= 1		[default = eMessageRole_CreateRole_S];
optional RoleInfo		role		= 2;
}

message MessageRoleEnterGame
{
optional eMessageRole 	id    		= 1   	[default = eMessageRole_EnterGame_C];
optional string			unitid     	= 2;
optional string 		clienthost	= 3;	// 服务器回填
optional uint32 		clientport 	= 4;	// 服务器回填
optional string 		token 		= 5;	// 客服TOKEN
}

message MessageLoginSuccess
{
optional eMessageRole	id			= 1		[default = eMessageRole_LoginSuccess_S];
required uint32         step        = 2;    // 玩家新手引导步骤
required int32 			race 		= 3;	// 职业
}

message MessageRoleDetails
{
optional eMessageRole 		id			= 1   	[default = eMessageRole_RoleDetail_S];
optional ZoneInfo			zone		= 2;	// 区服信息
optional AccountInfo		account		= 3;	// 帐号信息
optional RoleDetailInfo 	roleinfo 	= 4;	// 角色详细信息
repeated SoldierDetailInfo	soldiers	= 5;	// 战士详细信息
required RoleAvatar			avatar		= 6;
optional YellowStoneInfo    yellowinfo  = 7;    //黄钻信息
}

message MessageRoleChat
{
optional eMessageRole	id			= 1		[ default = eMessageRole_Chat_CS ];
optional string 		sender_id	= 2;	// 发送方ID
optional string			sender_name	= 3;	// 发送方名字, 服务器回填
optional int32          pfid        = 4;    // 平台
optional int32          zoneid      = 5;    //  平台内区服ID
optional eChatChannel	channel		= 6;	// 频道
optional string			receiver_id	= 7;	// 接收方ID, 客户端选填
optional string			receiver_name=8;	// 接收方名字, 客户端选填
optional string			message		= 9;	// 玩家输入框中发送的内容(动态内容)
optional string			static_message	= 10;	// 静态内容(读取配置)
}

message MessageBroadcastShopResponse
{
optional eMessageRole	id			= 1		[default = eMessageRole_BroadcastShopLimit_S];
required uint32			articleid	= 2;	// 商城id
required uint32			count		= 3;	// 已被购买的数量
required string			unitid		= 4;	// 购买者unitid
required string			rolename	= 5;	// 购买者名字
}

message MessageRoleLogout
{
optional eMessageRole 	id    		= 1   	[default = eMessageRole_RoleLogout_C];
optional string			unitid     	= 2;
}

message MessageChangeRoleNameRequest
{
optional eMessageRole	id			= 1		[default = eMessageRole_ChangeRoleName_C];
required string			unitid		= 2;	// 玩家id
required string			rolename	= 3;	// 玩家名字
required string			account		= 4;	// 玩家帐号
}

message MessageChangeRoleNameResponse
{
optional eMessageRole	id			= 1		[default = eMessageRole_ChangeRoleName_S];
required string			unitid		= 2;	// 玩家id
required string			rolename	= 3;	// 玩家名字
required string			account		= 4;	// 玩家帐号
}

message MessageRoleNameChangeNotify
{
optional eMessageRole 	id 			= 1 	[default = eMessageRole_RoleNameChange_SC];
required string 		unitid 		= 2;	// 修改名字玩家id
required string 		rolename 	= 3; 	// 玩家名字
required string 		account 	= 4;	// 玩家帐号
}

message MessageOpenedSystemList
{
optional eMessageRole   id         	= 1  	[default = eMessageRole_OpendSystem_S];
repeated int32          openid     	= 2 ; 	// 开放功能ID
}

message MessageAddonStrengthNotify
{
optional eMessageRole 	id 			= 1 	[default = eMessageRole_AddonStrength_S];
optional uint32 		strength 	= 2;	// 体力值
}

message MessageRoleExpChange
{
optional eMessageRole		id 			= 1 	[default = eMessageRole_ExpChange_S];
repeated RoleExpPair		changelist	= 2;	// 经验变化列表
}

message MessageRoleAttrChange
{
optional eMessageRole		id			= 1		[default = eMessageRole_AttrChange_S];
repeated RoleAttrPair		changelist	= 2;	// 改变列表
}

message MessageRoleTrainRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_Train_C];
optional int32				soldier		= 2;	// 培养的战士ID
optional TrainMethod		method		= 3;	// 培养方式
optional int32				trainagain	= 4;	// 重复培养 0 - 一次, 1 - 十次
}

message MessageRoleTrainResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_Train_S];
optional int32				soldier		= 2;	// 培养的战士ID
repeated int32				assignscheme= 3;	// 分配的方案
}

message MessageRoleTrainSaveRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_TrainSave_C];
optional int32				soldier		= 2;	// 战士ID
}

message MessageRoleTrainSaveResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_TrainSave_S];
optional int32				soldier		= 2;	// 战士ID
}

message MessageRoleTrainDiscard
{
optional eMessageRole		id			= 1		[default = eMessageRole_TrainDiscard_C];
optional int32				soldier		= 2;	// 战士ID
}

message MessageRoleResetPotencyRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_ResetPotency_C];
optional int32				soldier		= 2;	// 战士ID
}

message MessageRoleResetPotencyResponse
{
optional eMessageRole		id		 	= 1		[default = eMessageRole_ResetPotency_S];
optional int32				soldier		= 2;	// 战士ID
}

message MessageRoleGetRoleInfoRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_GetRoleInfo_C];
required string				unitid		= 2;	// 角色ID
required int32				soldierid	= 3;	// 战士ID, 0 - 获取英雄信息
}
message MessageRoleGetRoleInfoResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_GetRoleInfo_S];
required string				unitid		= 2;	// 角色ID
required int32              viplv       = 3;    // vip等级
required int32              title       = 4;    // 称号
repeated SoldierSimpleInfo	soldierlist	= 5;	// 战士列表
required SoldierInfo		soldierinfo	= 6;	// 战士信息
}

//
message MessageBannedAccountNotify
{
optional eMessageRole		id			= 1		[default = eMessageRole_BannedAccount_S];
required string				account		= 2;	// 帐号
required string				unitid		= 3;	// 角色ID
required string 			rolename	= 4;	// 角色名
required uint32				debantime	= 5;	// 解封时间
}

// 玩家升级的消息
message MessageRoleLevelupNotify
{
optional eMessageRole		id			= 1		[default = eMessageRole_Levelup_S];
optional string				unitid		= 2;	// 玩家ID
optional int32				level 		= 3;	// 等级
}

message MessageGetBuffList
{
optional eMessageRole		id			= 1		[default = eMessageRole_GetBuffList_C];
}

message MessageRoleBuffList
{
optional eMessageRole		id			= 1		[default = eMessageRole_BuffList_S];
repeated BuffInfo			bufflist	= 2;	// BUFF列表
}

message MessageRoleLearnHeartRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_LearnHeart_C];
optional int32				soldier		= 2;	// 战士ID
}

message MessageRoleLearnHeartResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_LearnHeart_S];
optional int32				heartid		= 2;	// 当前正在学习的心法
optional int32				line		= 3;	// 当前正在学习的重数
optional int32				acupoint	= 4;	// 已学习到的穴位点
optional int32              soldier     = 5;    // 战士ID
}

message MessageRoleResetHeartRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_ResetHeart_C];
optional int32				soldier		= 2;	// 战士id
}

message MessageRoleResetHeartResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_ResetHeart_S];
optional int32				heartid		= 2;	// 当前正在学习的心法
optional int32				line		= 3;	// 当前正在学习的重数
optional int32				acupoint	= 4;	// 已学习到的穴位点
optional int32              soldier     = 5;    // 战士ID
}

message MessageRoleVariableRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_RoleVariable_C];
}

message MessageRoleVariableResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_RoleVariable_S];
required int32				pop			= 2;	// 临时人气
required int32				gotbox		= 3;	// 今天是否开过宝箱
}

message MessageGetGreetPopPriseRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_GetGreetPopPrise_C];
}

message MessageGetGreetPopPriseResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_GetGreetPopPrise_S];
}

message MessageGetSoldierSkillRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_GetSkillList_C];
required uint32				soldierid	= 2;	// 战士id
}

message MessageGetSoldierSkillResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_GetSkillList_S];
repeated SkillDetailInfo	info		= 2;	// 技能id
required uint32				soldierid	= 3;	// 战士id
}

message MessageUpGradeSkillRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_UpGradeSkill_C];
required uint32				skillid		= 2;	// 升级技能id
required uint32				soldierid	= 3;	// 战士id
}

message MessageUpGradeSkillResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_UpGradeSkill_S];
required uint32				skillid		= 2;	// 升级技能id
required uint32				soldierid	= 3;	// 战士id
required uint32				level		= 4;	//
}

message MessageInlayFuStoneRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_InlayFuStone_C];
required uint32				soldierid	= 2;	// 战士id
required uint32				skillid		= 3;	// 技能id
required string				entityid	= 4;	// 符石实体id
}

message MessageInlayFuStoneResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_InlayFuStone_S];
required uint32				soldierid	= 2;	// 战士id
required uint32				skillid		= 3;	// 技能id
required uint32				itemid		= 4;	// 符石id
optional string				newentityid	= 5;	// 新道具实体ID
optional uint32				newbaseid	= 6;	// 基础baseID
}

message MessageRemoveFuStoneRequest
{
optional eMessageRole		id			= 1		[default = eMessageRole_RemoveFuStone_C];
required uint32				soldierid	= 2;	// 战士id
required uint32				skillid		= 3;	// 技能id
}

message MessageRemoveFuStoneResponse
{
optional eMessageRole		id			= 1		[default = eMessageRole_RemoveFuStone_S];
required uint32				soldierid	= 2;	// 战士id
required uint32				skillid		= 3;	// 技能id
required uint32				itemid		= 4;	// 符石id
optional string				newentityid	= 5;	// 新道具实体ID
optional uint32				newbaseid	= 6;	// 基础baseID
}

message MessageRoleSetNewbieGuide
{
optional eMessageRole       id          = 1     [default = eMessageRole_SetNewbieGuide_C];
required uint32             step        = 2;    // 设置玩家步骤id
}

message MessageRoleSetNewbieAct
{
optional eMessageRole       id          = 1     [default = eMessageRole_SetNewbieAct_C];
required uint32             step        = 2;    // 步骤
}

message MessageRoleSendLoadUdp
{
optional eMessageRole       id          = 1     [default = eMessageRole_SendLoadUpd_C];
required int32              step        = 2;    // 步骤
required string             account     = 3;    // 平台id
optional PlatformInfo       info        = 4;    // 平台信息
optional string             host        = 5;
optional string 			roleid 		= 6;	// 角色ID
}

message MessageGetRecruitSoldierList
{
optional eMessageRole 		id 			= 1 	[default = eMessageRole_GetRecruitSoldier_C];
}

message MessageRecruitSoldierList
{
optional eMessageRole 		id 			= 1 	[default = eMessageRole_GetRecruitSoldier_S];
repeated int32 				list 		= 2;
}

message MessageRecruitSoldierRequest
{
optional eMessageRole 		id 			= 1 	[default = eMessageRole_RecruitSoldier_C];
optional int32 				index 		= 2;	// 招募的编号
}

message MessageRecruitSoldierResponse
{
optional eMessageRole 		id 			= 1 	[default = eMessageRole_RecruitSoldier_S];
optional SoldierDetailInfo 	soldier 	= 2;	// 战士信息(可选)
}

message MessageSoldierStatus
{
optional eMessageRole 		id 			= 1 	[default = eMessageRole_SoldierStatus_CS];
optional int32              soldier     = 2;    //
optional eSoldierStatus 	status 		= 3;	// 状态
}

message MessageGetSoldierListRequest
{
optional eMessageRole 		id 			= 1 	[default = eMessageRole_GetSoldierList_C];
}

message MessageGetSoldierListResponse
{
optional eMessageRole 		id 			= 1 	[default = eMessageRole_GetSoldierList_S];
repeated SoldierDetailInfo 	list 		= 2;	// 获取所有战士
}

message MessageRoleUpdateYellowInfoRequest
{
optional eMessageRole       id          = 1     [default = eMessageRole_UpdateYellowInfo_C];
}

message MessageRoleUpdateYellowInfoResponse
{
optional eMessageRole       id          = 1     [default = eMessageRole_UpdateYellowInfo_S];
required YellowStoneInfo    yellowinfo  = 2;   //黄钻信息
}

message MessageRoleGetYellowRewardInfoRequest
{
optional eMessageRole       id          = 1     [default = eMessageRole_GetYellowRewardInfo_C];
}

message MessageRoleGetYellowRewardInfoResponse
{
optional eMessageRole       id          = 1     [default = eMessageRole_GetYellowRewardInfo_S];
required bool               newbird     = 2;    //黄钻新手礼包领取标识
required bool               everyday    = 3;    //黄钻每日礼包领取标识
required int32              uplevel     = 4;    //黄钻等级礼包领取标识
}

message MessageRoleGetYellowNewBirdRequest
{
optional eMessageRole       id          = 1     [default = eMessageRole_GetYellowNewBird_C];
}

message MessageRoleGetYellowEveryDayRequest
{
optional eMessageRole       id          = 1     [default = eMessageRole_GetYellowEveryDay_C];
}

message MessageRoleGetYellowUpLevelRequest
{
optional eMessageRole       id          = 1     [default = eMessageRole_GetYellowUpLevel_C];
}

message MessageSoldierRefineRequest
{
optional eMessageRole 		id 			= 1 	[default = eMessageRole_SoldierRefine_C];
optional uint32 			soldierid 	= 2;	// 战士ID
optional RefineMethod 		method 		= 3;	// 熔炼方式
optional bool 				usemoney	= 4;	// 是否使用元宝
}
message MessageSoldierRefineResponse
{
optional eMessageRole       id          = 1     [default = eMessageRole_SoldierRefine_S];
optional uint32 			soldierid 	= 2;
optional int32 				multiple 	= 3;	// 倍率
optional string 			totalexp 	= 4;	// 总经验值
}

message MessageVipLvRewardRequest
{
optional eMessageRole       id          = 1     [default = eMessageRole_GetVipLevelReward_C];
optional uint32             level       = 2;    //领取vip等级
}

message MessageVipLvRewardInfoRequest
{
optional eMessageRole        id         = 1     [default = eMessageRole_GetVipLevelRewardInfo_C];
}

message MessageVipLvRewardInfoResponse
{
optional eMessageRole        id         = 1     [default = eMessageRole_GetVipLevelRewardInfo_S];
optional int32               reward     = 2;    // 领取vip等级奖励标识
}

message MessageGainCoinInfoRequest
{
optional eMessageRole        id         = 1     [default = eMessageRole_GetGainCoinInfo_C];
}

message MessageExchangeCoinRequest
{
optional eMessageRole        id         = 1     [default = eMessageRole_ExchangeCoin_C];
optional int32               type       = 2;  //类型(0.一次1.十次)
}

message MessageGetGainCoinQuestIDRequest
{
optional eMessageRole        id         = 1     [default = eMessageRole_GetGainCoinQuestID_C];
}

message MessageGainCoinInfoResponse
{
optional eMessageRole        id              = 1     [default = eMessageRole_GetGainCoinInfo_S];
optional uint32              answercount     = 2;    // 问答次数
optional int32               answercd        = 3;    // 问答cd
optional uint32              exchangecount   = 4;    // 直接兑换次数

}

message MessageGainCoinSelectQuestResponse
{
optional eMessageRole        id              = 1     [default = eMessageRole_GetGainCoinQuestID_S];
optional uint32              questid         = 2;    // 题目id
}

message MessageGainCoinAnswerResponse
{
optional eMessageRole        id              = 1     [default =  eMessageRole_GetGainCoinAnswer_S];
optional uint32              answerindex     = 2;    // 答案标识
optional int32               level           = 3;
optional int32               answercd        = 4;
optional uint32              answercount     = 5;
}

message MessageGainCoinAnswerRequest
{
optional eMessageRole        id              = 1     [default =  eMessageRole_GetGainCoinAnswer_C];
optional uint32              questid         = 2;    // 问题ID
optional uint32              answerindex     = 3;    // 答案顺序
}

message MessageGainCoinExchangeResponse
{
optional eMessageRole        id              = 1     [default = eMessageRole_ExchangeCoin_S];
optional uint32              exchangecount   = 2;    // 直接兑换次数
}

message MessageMakePillRequest
{
optional eMessageRole                   id      = 1     [default = eMessageRole_MakePill_C];
required eMessageRole_MakePill_Type     type    = 2     [default = eMessageRole_MakePill_Type_Normal];
}

message MessageMakePillResponse
{
optional eMessageRole           id              = 1     [default = eMessageRole_MakePill_S];
required eMessageRole_MakePill_Type     type    = 2     [default = eMessageRole_MakePill_Type_Normal];
repeated PillDetailInfo         pillinfos      = 3;    //丹药列表
}

message MessageMovePillRequest
{
optional eMessageRole                   id          = 1 [default = eMessageRole_MovePill_C];
required eMessageRole_PillPlace         from        = 2;//来源位置
required eMessageRole_PillPlace         to          = 3;//目标位置
required int32                          fromplace  = 4;//来源坑位
required int32                          toplace    = 5;//目标坑位
optional int32                          sid         = 6;//丹药的角色id
}

message MessageMovePillResponse
{
optional eMessageRole                   id          = 1     [default = eMessageRole_MovePill_S];
required eMessageRole_PillPlace         from        = 2;    //来源位置
required eMessageRole_PillPlace         to          = 3;    //目标位置
required int32                          fromplace  = 4;    //来源坑位
required int32                          toplace    = 5;    //目标坑位
optional int32                          sid         = 6;    //丹药的角色id
}

message MessageUpPillLVRequest
{
optional eMessageRole    id              = 1     [default = eMessageRole_UpPillLV_C];
required uint32          sid             = 2;    //角色
required uint32          slot            = 3;    //角色的丹药位置
}

message MessageUpPillLVResponse
{
optional eMessageRole    id              = 1     [default = eMessageRole_UpPillLV_S];
required uint32          sid             = 2;    //角色
required uint32          slot            = 3;    //角色的丹药位置
required uint32          level           = 4;    //丹药等级
}

message MessageDecomPillRequest
{
optional eMessageRole                   id          = 1 [default = eMessageRole_DecomPill_C];
required eMessageRole_DecomPill_Type    type        = 2;    //普通分解/一键分解
optional eMessageRole_PillPlace         from        = 3;    //炼丹炉/丹药仓
optional int32                          fromplace   = 4;    //要分解的丹药位置
}

message MessageDecomPillResponse
{
optional eMessageRole                   id          = 1 [default = eMessageRole_DecomPill_S];
required eMessageRole_DecomPill_Type    type        = 2;    //普通分解/一键分解
optional eMessageRole_PillPlace         from        = 3;    //炼丹炉/仓库
repeated PillDetailInfo                 pillinfos   = 4;
}

message MessageConvertPillRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_ConvertPill_C];
required int32          pillid          = 2;    //要兑换的丹药id
}

message MessageConvertPillResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_ConvertPill_S];
required int32          slot            = 2;    //兑换后放的仓库位置
required int32          pillid          = 3;    //要兑换的丹药id
//碎片和灵力走通知
}

message MessageGetPillRepoRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetPillRepo_C];
}

message MessageGetPillRepoResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetPillRepo_S];
repeated PillDetailInfo pillinfos       = 2;
}

message MessageGetPillFurnaceRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetPillFurnace_C];
}

message MessageGetPillFurnaceResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetPillFurnace_S];
required int32          furnacelevel    = 2;    //炼丹炉等级
repeated PillDetailInfo pillinfos       = 3;
}

message MessageAddPillResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_AddPills_S];
repeated int32          pillid          = 2;    //丹药id列表（可使用重复id）
}

message MessageRankFirstInfoRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetRankFirstInfo_C];
}

message MessageRankDetailedInfoRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetRankDetailedInfo_C];
required RankType       type            = 2;    //排行榜类型
required int32          index           = 3;    //开始顺序
required int32          endindex        = 4;    //结束索引
}

message MessageWorshipCountRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetWorshipCount_C];
}

message MessageWorshipRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_Worship_C];
optional string         uid             = 2;    //玩家ID
}

message MessageRankFirstInfoResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetRankFirstInfo_S];
repeated RankFirst      firstinfo       = 2;    //排行榜前一名信息
}

message MessageRankDetailedInfoResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetRankDetailedInfo_S];
repeated RankDetailedInfo detailed      = 2;
required int32          rankcount       = 3;
optional int32          selfrank        = 4;
required int32          type            = 5;
}

message MessageWorshipCountResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetWorshipCount_S];
repeated string         uid             = 2;    //ID
}

message MessageWorshipResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_Worship_S];
optional string         uid             = 2;    //ID
}

message MessageMeditateStartTimeRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_MeditateStartTime_C];
}

message MessageMeditateStartTimeResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_MeditateStartTime_S];
required int32          starttime       = 2;    // 开始时间
optional int32 		    girlid 		    = 3;    // 陪睡妖姬id
optional int32          girlenergy      = 4;    // 开始精力 （不是当前值）
optional int32          girllevel       = 5;    // 妹子等级
}

message MessageGetMeditateExpRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetMeditateExp_C];
}

message MessageGetMeditateExpResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetMeditateExp_S];
optional int32 		    girlid 		    = 2;    // 陪睡妖姬id
optional int32          girlenergy      = 3;    // 开始精力 （不是当前值）
optional int32          girllevel       = 4;    // 妹子等级
}


message MessageRoleGetMonsterTowerInfoRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_GetMonsterTower_C];
}

message MessageRoleGetMonsterTowerInfoResponse
{
optional eMessageRole           id              = 1     [default = eMessageRole_GetMonsterTower_S];
optional int32                  resettimes      = 2;    // 重置次数
optional int32                  buycount        = 3;    // 购买过的次数
repeated MonsterTowerUnit       towerinfo       = 4;    // 万妖塔信息
}

message MessageRoleEnterMonsterTowerFloorRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_EnterMonsterTowerFloor_C];
optional int32          towerid         = 2;    // 塔的id
optional int32          floorid         = 3;    // 进入层的id
}

message MessageRoleEnterMonsterTowerFloorResponse
{
optional eMessageRole               id              = 1     [default = eMessageRole_EnterMonsterTowerFloor_S];
optional int32                      isfight         = 2;    // 是否战过某个门
repeated MonsterTowerLevelUnit      levellist       = 3;    // 关卡列表
optional int32                      towerid         = 4;    // 塔id
optional int32                      viewtimes       = 5;    // 窥探次数
optional int32                      fightlevelid    = 6;    // 打过的关卡id
}

message MessageRoleResetMonsterTowerRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_ResetMonsterTower_C];
optional int32          towerid         = 2;    // 重置塔的id
}

message MessageRoleResetMonsterTowerResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_ResetMonsterTower_S];
optional int32          towerid         = 2;    // 重置塔的id
optional int32          resetcount      = 3;    // 次数
}

message MessageRoleBuyMonsterTowerResetRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_BuyMonsterTowerReset_C];
}

message MessageRoleBuyMonsterTowerResetResponse
{
optional eMessageRole   id              = 1     [default = eMessageRole_BuyMonsterTowerReset_S];
optional int32          resetcount      = 2;    // 次数
optional int32          buycount        = 3;    // 购买次数
}

message MessageRoleViewMonsterTowerRequest
{
optional eMessageRole   id              = 1     [default = eMessageRole_ViewMonsterTower_C];
optional int32          towerid         = 2;    // 塔id
optional int32          floorid         = 3;    // 层数
optional int32          doorsid         = 4;    // 门id
}

message MessageRoleViewMonsterTowerResponse
{
optional eMessageRole               id              = 1     [default = eMessageRole_ViewMonsterTower_S];
optional int32                      towerid         = 2;    // 塔id
optional int32                      floorid         = 3;    // 层数
optional int32                      doorsid         = 4;    // 门id
optional int32                      levelid         = 5;    // 关卡id
optional int32                      viewtimes       = 6;    // 窥探的次数
repeated MonsterTowerLevelUnit      levellist       = 7;    // 关卡列表
}

message MessageBuyStrengthRequest
{
optional eMessageRole   id              = 1   [default = eMessageRole_BuyStrength_C];
}

message MessageGetBuyStrengthCountResponse
{
optional eMessageRole   id              = 1   [default = eMessageRole_GetBuyStrengthCount_S];
required int32          count           = 2;  //购买次数
}

message MessageGetBuyStrengthCountRequest
{
optional eMessageRole   id              = 1   [default = eMessageRole_GetBuyStrengthCount_C];
}

message MessageGetGiftKeyRewardRequest
{
optional eMessageRole   id              = 1   [default = eMessageRole_GetGiftKeyReward_C];
required string         giftkey         = 2 ;
}

message MessageRoleGetTitleListRequest
{
optional eMessageRole   id              = 1   [default = eMessageRole_GetTitleList_C];
}

message MessageRoleGetTitleListResponse
{
optional eMessageRole   id              = 1   [default = eMessageRole_GetTitleList_S];
repeated int32          titleidlist     = 2;  // 称号ID列表
}

message MessageRoleGetTitleRequest
{
optional eMessageRole   id              = 1   [default = eMessageRole_GetTitle_C];
optional int32          titleid         = 2; // 称号ID
}

message MessageRoleGetTitleResponse
{
optional eMessageRole   id              = 1   [default = eMessageRole_GetTitle_S];
optional int32          titleid         = 2; // 称号ID
optional int32          expiretime      = 3; // 过期时间
optional bool           isequip         = 4; // 是否装备
}

message MessageRoleEquipTitleRequest
{
optional eMessageRole   id              = 1   [default = eMessageRole_EquipTitle_C];
optional int32          titleid         = 2; // 称号id
optional int32          type            = 3; // 1穿称号 2脱称号
}

message MessageRoleTitleNotice
{
optional eMessageRole   id              = 1  [default = eMessageRole_UpdateTitle_S];
optional int32          titleid         = 2; // 称号id
optional int32          expiretime      = 3; // 过期时间
}

message MessageRoleAddTitleNotice
{
optional eMessageRole 	id 				= 1 [default = eMessageRole_AddTitle_S];
optional int32 			titleid 		= 2; // 称号id
}

message MessageRoleGetGirlRequest
{
optional eMessageRole 	id 				= 1 [default = eMessageRole_GetGirl_C];
optional int32 			girlid 			= 2; // 妖姬状态
}

message MessageRoleGetGirlResponse
{
optional eMessageRole 	    id 				= 1 [default = eMessageRole_GetGirl_S];
optional GirlUnitDetails    girl            = 2; // 妖姬详细状态
optional bool               taskfinished    = 3; // 任务是否完成
optional int32              girlid          = 4; // 妖姬
optional bool               iscollected     = 5; // 是否被收服
}

message MessageRoleGetGirlListRequest
{
optional eMessageRole   id              = 1 [default = eMessageRole_GetGirlList_C];
}

message MessageRoleGetGirlListResponse
{
optional eMessageRole   id              = 1 [default = eMessageRole_GetGirlList_S];
repeated int32          girlids         = 2; // 妖姬列表
optional int32          sleepgirlid     = 3; // 陪睡妹子id
}

message MessageRoleUpdateGirlNotify
{
optional eMessageRole 	id 				= 1 [default = eMessageRole_UpdateGirl_S];
repeated GirlUnit 		list 			= 2; // 妖姬列表
optional bool           update          = 3; // 是否更新
}

message MessageRoleCollectGirlRequest
{
optional eMessageRole 	id 				= 1 [default = eMessageRole_CollectGirl_C];
optional int32 			girlid 			= 2; // 妖姬id
optional int32          type            = 3; // 收复方式：1，金币，2，元宝
}

message MessageRoleCollectGirlResponse
{
optional eMessageRole 	id 				= 1 [default = eMessageRole_CollectGirl_S];
optional GirlUnitDetails girl           = 2; // 收复妖姬详细信息
}

message MessageRoleLoveGirlRequest
{
optional eMessageRole   id              = 1 [default = eMessageRole_LoveGirl_C];
optional int32          girlid          = 2; // 妖姬id
}

message MessageRoleLoveGirlResponse
{
optional eMessageRole   id              = 1 [default = eMessageRole_LoveGirl_S];
optional GirlUnitDetails girl           = 2; // 妖姬详细信息
optional int32          exp             = 3; // 增加的好感度
}

message MessageRoleGiftGirlRequest
{
optional eMessageRole   id              = 1 [default = eMessageRole_GiftGirl_C];
optional int32          girlid          = 2; // 妖姬id
optional int32          giftid          = 3; // 礼物id（物品id）
}

message MessageRoleGiftGirlResponse
{
optional eMessageRole   id              = 1 [default = eMessageRole_GiftGirl_S];
optional GirlUnitDetails girl           = 2; // 妖姬详细信息
optional int32          exp             = 3; // 增加的好感度
}

message MessageRoleSetGirlSleepRequest
{
optional eMessageRole   id              = 1 [default = eMessageRole_SetGirlSleep_C];
optional int32          girlid          = 2; // 妖姬id
optional int32          status          = 3; // 状态：1，睡觉，2，预备
}

message MessageRoleSetGirlSleepResponse
{
optional eMessageRole   id              = 1 [default = eMessageRole_SetGirlSleep_S];
optional int32          girlid          = 2; // 新陪睡妖姬id：为0则代笔没人陪
optional int32          energy          = 3; // 新陪睡妖姬初始精力
required int32          starttime       = 4; // 开始时间
optional int32          girllevel       = 5; // 新陪睡妖姬等级
}

message MessageRoleBuyGirlEnergyRequest
{
optional eMessageRole   id              = 1 [default = eMessageRole_BuyGirlEnergy_C];
optional int32          girlid          = 2; // 妖姬id
}

message MessageRoleBuyGirlEnergyResponse
{
optional eMessageRole   id              = 1 [default = eMessageRole_BuyGirlEnergy_S];
optional int32          girlid          = 2; // 妖姬id
optional int32          girlenergy      = 3; // 初始精力增加后的值
}

message MessageRoleGameLoadUdpRequest
{
optional eMessageRole   id          = 1 [default = eMessageRole_GameLoadUdp_C];
optional int32          percentage  = 2;    // 百分比
required string         account     = 3;    // 平台id
optional PlatformInfo   info        = 4;    // 平台信息
optional string         host        = 5;
optional string 		roleid 		= 6;	// 角色ID
}

message MessageRolePageButtonUdpRequest
{
optional eMessageRole   id              = 1 [default = eMessageRole_PageButtonUdp_C];
optional int32          buttonid        = 2; // 按钮序号
required string         account     = 3;    // 平台id
optional PlatformInfo   info        = 4;    // 平台信息
optional string         host        = 5;
optional string 		roleid 		= 6;	// 角色ID
}

// 获取抽奖信息
message MessageRoleGetLotteryRequest
{
optional eMessageRole 	id 			= 1 [default = eMessageRole_GetLottery_C];
};
message MessageRoleGetLotteryResponse
{
optional eMessageRole 	id 			= 1 [default = eMessageRole_GetLottery_S];
optional int32 			freetimes 	= 2;	// 今天剩余的免费次数
optional int32 			distimes	= 3;	// 今天剩余的打折次数
};

// 获取宝箱日志
message MessageRoleGetSlotmachineRequest
{
optional eMessageRole 	id 			= 1 [default = eMessageRole_GetSlotMachine_C];
};
message MessageRoleGetSlotmachineResponse
{
optional eMessageRole 	id 			= 1 [default = eMessageRole_GetSlotMachine_S];
repeated DrawRecord 	records		= 2; // 日志
};

// 抽奖
message MessageRoleDrawSlotmachineRequest
{
optional eMessageRole 	id 			= 1 [default = eMessageRole_DrawSlotMachine_C];
optional int32 			times		= 2; // 抽奖次数
}

message MessageRoleDrawSlotmachineResponse
{
optional eMessageRole 	id 			= 1 [default = eMessageRole_DrawSlotMachine_S];
repeated int32 			slots 		= 2; // 抽到的格子
optional int32 			freetimes 	= 3; // 今天剩余的免费次数
optional int32 			distimes	= 4; // 今天剩余的打折次数
}

message MessageRoleGetSoldierBookInfoRequest
{
optional eMessageRole   id          = 1 [default = eMessageRole_GetSoldierBookInfo_C];
}

message MessageRoleGetSoldierBookInfoResponse
{
optional eMessageRole     id 			= 1 [default = eMessageRole_GetSoldierBookInfo_S];
repeated SoldierBookInfo  info 		    = 2; //  图鉴信息
}

message MessageRolePrintSoldierRequest
{
optional eMessageRole     id            = 1 [default = eMessageRole_PrintSoldier_C ];
optional int32            soldierid     = 2;  // 宝宝ID
optional int32            bookid        = 3;  // 图鉴id
}
