package msg.scene;
import "movement.proto";
import "scenetype.proto";

//
// 命令字定义
//
enum eMessageScene
{
eMessageScene_EnterScene_S				= 0x1100; 	// 进入场景
eMessageScene_UnitList_S				= 0x1101;	// 生物列表(包括玩家和NPC)
eMessageScene_UnitEnter_S				= 0x1102;	// 新玩家进入场景
eMessageScene_Movement_CS				= 0x1103; 	// 移动消息
eMessageScene_UnitLeave_S				= 0x1104;	// 玩家离开场景
eMessageScene_EnterCity_C				= 0x1105;	// 进入城镇
eMessageScene_EnterCopy_C				= 0x1106;	// 进入副本(请求)
eMessageScene_EnterCopy_S				= 0x1107;	// 进入副本(通知)
eMessageScene_CopyReady_C				= 0x1108;	// 准备完成
eMessageScene_StartFight_S				= 0x1109;	// 战斗开始
eMessageScene_ExitCopy_C				= 0x110A;	// 退出副本
eMessageScene_Announcement_S        	= 0x110B;   // 来自gm的系统消息
eMessageScene_GetCopyList_C				= 0x110C;	// 获取传送点的关卡列表
eMessageScene_GetCopyList_S				= 0x110D;	// 返回传送点的关卡列表
eMessageScene_GetAvatarInfo_C			= 0x110E;	// 获取玩家Avatar信息
eMessageScene_GetAvatarInfo_S			= 0x110F;	// 返回玩家Avatar信息
eMessageScene_TalkNPC_C					= 0x1110;	// 与NPC对话
eMessageScene_GetCopyList1_C			= 0x1111;	// 获取城镇的关卡列表
eMessageScene_GetCopyList1_S			= 0x1112;	// 返回城镇的关卡列表
eMessageScene_RecordSwfError_C  		= 0x1113;   // 记录客户端错误日志
eMessageScene_StartHosting_C    		= 0x1114;   // 玩家挂机
eMessageScene_StartHosting_S    		= 0x1115;   // 玩家挂机(服务器返回)
eMessageScene_DoHosting_CS      		= 0x1116;   // 挂机中返回
eMessageScene_InterruptHosting_C		= 0x1117;   // 中断挂机
eMessageScene_InterruptHosting_S		= 0x1118;   // 中断挂机(服务器返回)
eMessageScene_HostingEnd_S      		= 0x1119;   // 挂机结束
eMessageScene_OpenCityList_C  			= 0x111A;	// 获取打开的城镇列表
eMessageScene_OpenCityList_S 			= 0x111B;	// 返回打开的城镇列表
eMessageScene_CityOpen_S				= 0x111C;	// 打开新的城镇通知
eMessageScene_CopyStatus_S 				= 0x111D;	// 关卡状态通知
eMessageScene_Challenge_C				= 0x111E;	// 挑战
eMessageScene_ChallengeLetter_S			= 0x111F;	// 给被挑战的一方下发挑战书
eMessageScene_ConfirmChallenge_CS 		= 0x1120;	// 确认挑战结果
eMessageScene_EnterCopyPK_S       		= 0x1121; 	// 进入战斗pk通知
eMessageScene_StartDragonReady_S  		= 0x1122;   // 四海龙王开始准备
eMessageScene_Revive_C					= 0x1123;	// 玩家复活
eMessageScene_EnterDragonCopy_S   		= 0x1124;   // 进入四海龙王副本通知
eMessageScene_LeaveDragonCopy_S   		= 0x1125;   // 离开四海龙王
eMessageScene_EnterMonsterGoCopy_C  	= 0x1126;   // 怪物攻城关卡
eMessageScene_MonsterGoCopyBoss_S   	= 0x1127;   // 通知前端龙的剩余信息
eMessageScene_MonsterGoCopyBossInFight_S= 0x1129;  	// 战斗中同步boss血量
eMessageScene_EnterMonsterTowerCopy_C   = 0x112A;   // 进入万妖塔副本
eMessageScene_StartTowerHosting_C    	= 0x112B;   // 玩家挂机
eMessageScene_StartTowerHosting_S    	= 0x112C;   // 玩家挂机(服务器返回)
eMessageScene_DoTowerHosting_CS      	= 0x112D;   // 挂机中返回
eMessageScene_InterruptTowerHosting_C	= 0x112E;   // 中断挂机
eMessageScene_InterruptTowerHosting_S	= 0x112F;   // 中断挂机(服务器返回)
eMessageScene_TowerHostingEnd_S      	= 0x1130;   // 挂机结束
eMessageScene_EnterMonsterTowerCopy_S   = 0x1131;   // 万妖塔攻打层
eMessageScene_ComebackZone_C            = 0x1132;   // 从集群回到所在区服( 集群崩溃使用 )
eMessageScene_LeaveScene_S 				= 0x1133;	// 离开场景
eMessageScene_EnterWestPreachCopy_C     = 0x1134;   // 进入押镖战斗
}

//
// 错误码定义
//
enum eErrorCodeScene
{
eErrorCodeScene_Success				= 0x000000;		// 成功
eErrorCodeScene_RoleOffline			= 0x110000;		// 玩家不在线
eErrorCodeScene_InvalidScene		= 0x110300;		// 非法场景
eErrorCodeScene_InvalidCityID		= 0x110500;		// 非法的城镇ID
eErrorCodeScene_NoPrivilege			= 0x110501;		// 没有资格进入城镇
eErrorCodeScene_HavebeenInScene		= 0x110502;		// 玩家已经在场景中
eErrorCodeScene_NoNameEnterCity     = 0x110503;     // 没有名字进入城镇
eErrorCodeScene_TeleporterPoint_Invalid = 0x110C00;	// 非法的传送点
eErrorCodeScene_CopyInvalid         = 0x110600;     // 进入副本不存在
eErrorCodeScene_MemberOffLine       = 0x110601;     // 队员不在线
eErrorCodeScene_QuestNotComplete    = 0x110602;     // 任务未完成
eErrorCodeScene_CreateCopyFailed    = 0x110603;     // 创建副本失败
eErrorCodeScene_InitializeCopyFail  = 0x110604;     // 初始化副本失败
eErrorCodeScene_MemberInCopy        = 0x110605;     // 队员仍在副本中
eErrorCodeScene_SelfNotEnoughStren	= 0x110606;		// 自己体力不足
eErrorCodeScene_MemberNotEnoughStren= 0x110607;		// 队员体力不足
eErrorCodeScene_MemberNot72HoleAct  = 0x110608;     // 队员没有接领72洞活动
eErrorCodeScene_Member72HoleNums    = 0x110609;     // 队员进入72洞活动不足
eErrorCodeScene_DragonNumsFail      = 0x11060A;     // 今日四海龙王挑战场次出错
eErrorCodeScene_DragonActNotStart   = 0x11060B;     // 四海龙王活动未开始
eErrorCodeScene_DragonStartTimeFail = 0x11060C;     // 四海龙王开始时间出错
eErrorCodeScene_DragonIsOver        = 0x11060D;     // 四海龙王报名已经结束
eErrorCodeScene_DragonFightStarted  = 0x11060E;     // 四海龙王战斗已经开始
eErrorCodeScene_MemberNot36IslandAct= 0x11060F;     // 队员没有接领36岛活动
eErrorCodeScene_Member36IslandNums  = 0x110610;     // 队员进入36岛活动不足

eErrorCodeScene_InHosting           = 0x111401;     // 玩家正在挂机中
eErrorCodeScene_InvalidCopyID       = 0x111402;     // 非法的副本ID
eErrorCodeScene_CopyNotPass         = 0x111403;     // 副本暂未通关无法挂机
eErrorCodeScene_StrengthNotEnough   = 0x111404;     // 体力不足
eErrorCodeScene_HostConfigNull      = 0x111405;     // vip挂机时间配置不存在
eErrorCodeScene_InFightNotHost      = 0x111406;     // 战斗中无法挂机
eErrorCodeScene_AreaIDNULL          = 0x111407;     // 区域id配置出错
eErrorCodeScene_72HoleActNotStart   = 0x111408;     // 制霸活动未开启
eErrorCodeScene_AreaNotHold         = 0x111409;     // 该区域没有制霸无法挂机
eErrorCodeScene_72HoleFightNums     = 0x11140A;     // 72洞战斗次数不够
eErrorCodeScene_36IslandActNotStart = 0x11140B;     // 制霸活动未开启
eErrorCodeScene_36IslandFightNums   = 0x11140C;     // 36洞战斗次数不够

eErrorCodeScene_HostingEnd          = 0x111701;     // 挂机已经停止
eErrorCodeScene_IsInTeam			= 0x111E00;		// 您在组队中
eErrorCodeScene_OpponentIsInTeam	= 0x111E01;		// 对手在组队中
eErrorCodeScene_OpponentOffline		= 0x111E02;		// 对手不在线
eErrorCodeScene_NotChallenge		= 0x111E03;		// 对方没有发起过挑战
eErrorCodeScene_ChallengeInFight	= 0x111E04;		// 战斗中不能发起挑战
eErrorCodeScene_ConfirmInFight		= 0x111E05;		// 战斗中不能接受挑战
eErrorCodeScene_HasChallenged		= 0x111E06;		// 您已经挑战过该玩家
eErrorCodeScene_TeamLeaderOffline	= 0x111E07;		// 对方队长不在线
eErrorCodeScene_CrossModules		= 0x111E08;		// 您已经在跨服模式中
eErrorCodeScene_OpponentCrossModules= 0x111E09;		// 对手已经在跨服模式中

eErrorCodeScene_NotInCopy2 			= 0x112300;		// 玩家不在副本中
eErrorCodeScene_CopyInvalid2 		= 0x112301;		// 玩家所在副本非法
eErrorCodeScene_NotInBattle 		= 0x112302;		// 玩家不在战斗中
eErrorCodeScene_NotEnoughMoney 		= 0x112303;		// 金币不足
eErrorCodeScene_ReviveFailed 		= 0x112304;		// 复活失败

eErrorCodeScene_MGoSysActNotStart 	= 0x112600;		// 系统活动未开始
eErrorCodeScene_MGoActNotStart 		= 0x112601;		// 活动未开始
eErrorCodeScene_MGoBossIsFight 		= 0x112602;		// boss正在被打
eErrorCodeScene_MGoNotLeader 		= 0x112603;		// 您不是队长

eErrorCodeScene_TeamNotEnterCopy    = 0x112A00;     // 组队不能进入

eErrorCodeScene_InvalidTowerID      = 0x112B00;     // 楼层未通过，无法挂机
eErrorCodeScene_TowerHostingEnd     = 0x112E00;     // 万妖塔挂机结束

eErrorCodeScene_DefPlayerFail       = 0x113400;     // 初始化被劫玩家数据失败
eErrorCodeScene_SysWestPreachNotGet = 0x113401;     // 活动未开启
eErrorCodeScene_SysWestPreachNotStart   = 0x113402; // 活动未开始
eErrorCodeScene_SysWestPreachEnd    = 0x113403; // 活动已结束
eErrorCodeScene_AtkActionNotGet     = 0x113404; // 活动尚未开启
eErrorCodeScene_AtkCDNotOver        = 0x113405; // cd未结束
eErrorCodeScene_PlunderOver         = 0x113406; // 今日掠夺次数已用完
eErrorCodeScene_defNotPreaching     = 0x113407; // 被掠夺玩家传道已结束
eErrorCodeScene_defIsFight          = 0x113408; // 被掠夺玩家正在被掠夺
eErrorCodeScene_defIsProtect        = 0x113409; // 被掠夺玩家进入保护期
eErrorCodeScene_defIsAtked          = 0x11340A; // 已被同一玩家掠夺过
eErrorCodeScene_ClientIDErr         = 0x11340B; // 被打劫ID是自己
}

message MessageEnterScene
{
optional eMessageScene 	id   		= 1		[default = eMessageScene_EnterScene_S];
optional uint32			sceneid     = 2;	// 玩家所在场景ID
optional int32  		pos_x		= 3;	// 位置X坐标
optional int32  		pos_y		= 4;	// 位置Y坐标
}

message MessageUnitList
{
optional eMessageScene 	id			= 1 	[default = eMessageScene_UnitList_S];
repeated SceneUnitInfo 	units 		= 2;	// 玩家列表
}

message MessageUnitEnter
{
optional eMessageScene	id			= 1		[default = eMessageScene_UnitEnter_S];
optional SceneUnitInfo	unit		= 3;	// 进入场景的玩家
}

message MessageUnitMove
{
optional eMessageScene 	id   		= 1   	[default = eMessageScene_Movement_CS];
optional string			unitid		= 2;	// 玩家ID
optional int32      	move_type	= 3;	// 移动类型
optional int32      	pos_x    	= 4;	// X坐标
optional int32      	pos_y    	= 5;	// Y坐标
optional int32			direction	= 6;	// 方向
}

message MessageUnitLeave
{
optional eMessageScene 	id 			= 1 	[default = eMessageScene_UnitLeave_S];
optional SceneUnitInfo 	unit		= 2;	// 玩家位置信息
}

message MessageEnterCity
{
optional eMessageScene 	id 			= 1 	[default = eMessageScene_EnterCity_C];
optional int32			cityid		= 2;	// 城镇ID
}

message MessageEnterCopy
{
optional eMessageScene 	id			= 1		[default = eMessageScene_EnterCopy_C];
optional int32			copyid		= 2;	// 副本ID, 关卡ID
optional int32			difficulty	= 3;	// 副本难度
}

message MessageEnterCopyNotify
{
optional eMessageScene	id			= 1		[default = eMessageScene_EnterCopy_S];
optional int32			copyid		= 2;	// 副本ID
optional FightMode		mode		= 3;	// 战斗模式
optional int32			difficulty	= 4;	// 战斗难度
optional int32			aiseed		= 5;	// AI随机种子
optional int32			monsterseed	= 6;	// 怪物随机种子
optional int32 			buffseed	= 7;	// BUFF随机种子
optional int32			otherseed	= 8;	// 其他随机种子
repeated CopyUnitInfo	unitlist	= 9;	// 副本中玩家的信息
repeated SupplyInfo 	supplylist 	= 10;	// 补给品列表
}

message MessageEnterDragonCopyNotify
{
optional eMessageScene  id          = 1     [default = eMessageScene_EnterDragonCopy_S];
optional CopyUnitInfo	unitinfo	= 2;	// 广播自己的战斗属性
}

message MessageLeaveDragonCopyNotify
{
optional eMessageScene  id          = 1     [default = eMessageScene_LeaveDragonCopy_S];
optional string         unitid      = 2;    // 离开的玩家id
}

message MessageEnterCopyPkNotify
{
optional eMessageScene  id          = 1     [default = eMessageScene_EnterCopyPK_S];
optional int32          copyid      = 2;    // 副本ID
repeated PkCopyUnitInfo unitlist    = 3;    // pk玩家信息
}

message MessageCopyReady
{
optional eMessageScene	id			= 1		[default = eMessageScene_CopyReady_C];
}

message MessageStartFight
{
optional eMessageScene 	id			= 1		[default = eMessageScene_StartFight_S];
}

message MessageExitCopy
{
optional eMessageScene 	id			= 1		[default = eMessageScene_ExitCopy_C];
}

message MessageAnnouncementNotify
{
optional eMessageScene  id          = 1     [default = eMessageScene_Announcement_S];
optional uint32 		msgid 		= 2;	// 消息ID
optional int32 			place 		= 3;	// 播放位置
optional int32 			priority 	= 4;	// 优先级
optional int32 			cycletimes	= 5;	// 轮播次数
optional string 		content 	= 6;	// 内容
}

// 传送点的关卡列表
message MessageSceneGetCopyListRequest
{
optional eMessageScene	id			= 1		[default = eMessageScene_GetCopyList_C];
optional int32			point		= 2;	// 传送点
}
message MessageSceneGetCopyListResponse
{
optional eMessageScene		id		= 1		[default = eMessageScene_GetCopyList_S];
repeated CopyProgressInfo	copys	= 2;	// 关卡列表
}

message MessageSceneGetAvatarInfo
{
optional eMessageScene	id			= 1		[default = eMessageScene_GetAvatarInfo_C];
optional string			unitid		= 2;	// 玩家ID
}

message MessageSceneRoleAvatarInfo
{
optional eMessageScene		id		= 1		[default = eMessageScene_GetAvatarInfo_S];
optional string				unitid	= 2;	// 玩家ID
optional UnitAvatar			avatar	= 3;	// 形象
}

// 与NPC对话
message MessageSceneTalkNPC
{
optional eMessageScene		id		= 1 	[default = eMessageScene_TalkNPC_C];
required int32				npcid	= 2;	// NPC ID
}

// 城镇列表
message MessageSceneGetCityListRequest
{
optional eMessageScene 	id 			= 1		[default = eMessageScene_OpenCityList_C];
}
message MessageSceneGetCityListResponse
{
optional eMessageScene 	id 			= 1		[default = eMessageScene_OpenCityList_S];
repeated int32 			citys 		= 2;	// 城镇列表
}

// 城镇的关卡列表
message MessageSceneGetCopyList1Request
{
optional eMessageScene	id			= 1		[default = eMessageScene_GetCopyList1_C];
optional int32			city		= 2;	// 城镇ID
}

message MessageSceneGetCopyList1Response
{
optional eMessageScene	id			= 1		[default = eMessageScene_GetCopyList1_S];
optional int32			city		= 2;	// 城镇ID
repeated TeamCopyInfo	copys		= 3;	// 关卡列表
}

message MessageSceneRecordSwfErrorRequest
{
optional eMessageScene  id          = 1     [default = eMessageScene_RecordSwfError_C];
optional string         errormsg    = 2;    // 错误消息
}

message MessageSceneStartHostingRequest
{
optional eMessageScene      id          = 1     [default = eMessageScene_StartHosting_C];
required uint32             copyid      = 2;    // 挂机副本id
required uint32             count       = 3;    // 挂机次数
required uint32             difficulty  = 4;    // 副本难度 1 简单 2 困难
}

message MessageSceneStartHostingResponse
{
optional eMessageScene      id          = 1     [default = eMessageScene_StartHosting_S];
required uint32             count       = 2;    // 挂机次数
required uint32             intveltime  = 3;    // 间隔时间
}

message MessageSceneHostingNotice
{
optional eMessageScene      id          = 1     [default = eMessageScene_DoHosting_CS];
required uint32             count       = 2;    // 剩余次数
required uint32             exp         = 3;    // 奖励经验
required uint32             coin        = 4;    // 奖励金币
required uint32             xiuwei      = 5;    // 奖励修为
repeated HostingItemReward  info        = 6;    // 奖励道具信息
}

message MessageSceneInterruptHostingRequest
{
optional eMessageScene       id         = 1     [default = eMessageScene_InterruptHosting_C];
}

message MessageSceneInterruptHostingResponse
{
optional eMessageScene      id          = 1     [default = eMessageScene_InterruptHosting_S];
required uint32             tag         = 2;    // 添加项待定
}

message MessageSceneHostingEnd
{
optional eMessageScene      id          = 1     [default = eMessageScene_HostingEnd_S];
required uint32             reason      = 2;    // 1 体力不足 2 背包不足
}

message MessageSceneStartTowerHostingRequest
{
optional eMessageScene      id          = 1     [default = eMessageScene_StartTowerHosting_C];
required uint32             towerid     = 2;    // 挂机塔id
required uint32             floorid     = 3;    // 挂机到多少层
required uint32             color       = 4;    // 颜色
}

message MessageSceneStartTowerHostingResponse
{
optional eMessageScene      id          = 1     [default = eMessageScene_StartTowerHosting_S];
required uint32             towerid     = 2;    // 挂机塔id
required uint32             intveltime  = 3;    // 间隔时间
}

message MessageSceneTowerHostingNotice
{
optional eMessageScene      id          = 1     [default = eMessageScene_DoTowerHosting_CS];
required uint32             towerid     = 2;    // 挂的塔id
required uint32             floorsid    = 3;    // 挂到多少层
required uint32             exp         = 4;    // 奖励经验
required uint32             coin        = 5;    // 奖励金币
required uint32             xiuwei      = 6;    // 奖励修为
repeated HostingItemReward  info        = 7;    // 奖励道具信息
}

message MessageSceneInterruptTowerHostingRequest
{
optional eMessageScene       id         = 1     [default = eMessageScene_InterruptTowerHosting_C];
}

message MessageSceneInterruptTowerHostingResponse
{
optional eMessageScene      id          = 1     [default = eMessageScene_InterruptTowerHosting_S];
required uint32             tag         = 2;    // 添加项待定
}

message MessageSceneTowerHostingEnd
{
optional eMessageScene      id          = 1     [default = eMessageScene_TowerHostingEnd_S];
required uint32             reason      = 2;    // 1 体力不足 2 背包不足
}

message MessageSceneOpenCity
{
optional eMessageScene 		id 			= 1 	[default = eMessageScene_CityOpen_S];
required uint32 			cityid 		= 2;	// 新的城镇
}

message MessageSceneCopyStatusChange
{
optional eMessageScene 		id 			= 1 	[default = eMessageScene_CopyStatus_S];
required CopyStatusInfo 	status 		= 2;	// 关卡状态
}

message MessageSceneChallenge
{
optional eMessageScene		id			= 1		[default = eMessageScene_Challenge_C];
optional ChallengeType		type		= 2;	// 挑战类型
optional string				opponent	= 3;	// 对手ID
}

message MessageSceneChallengeLetter
{
optional eMessageScene		id			= 1		[default = eMessageScene_ChallengeLetter_S];
optional ChallengeType		type		= 2;	// 挑战类型
optional ChallengeOpponent	opponent	= 3;	// 对手信息
}

message MessageSceneConfirmChallenge
{
optional eMessageScene		id			= 1		[default = eMessageScene_ConfirmChallenge_CS];
optional string				opponent	= 2;	// 对手ID
optional int32				result		= 3;	// 结果: 0 - 放弃; 1 - 接受
}

message MessageSceneStartDragonCopyReadyNotify
{
optional eMessageScene      id          = 1     [default = eMessageScene_StartDragonReady_S];
optional int32              level       = 2;    // 龙等级
}

message MessageSceneBattleRevive
{
optional eMessageScene 		id 			= 1 	[default = eMessageScene_Revive_C];
}

message MessageSceneEnterMonsterGoCopyRequest
{
optional eMessageScene      id          = 1     [default = eMessageScene_EnterMonsterGoCopy_C];
optional int32              type        = 2;    // 1进入boss战 2进入npc战
optional int32              hole        = 3;    // 打的洞的索引
}

message MessageSceneMonsterGoCopyBossNotify
{
optional eMessageScene      id          = 1     [default = eMessageScene_MonsterGoCopyBoss_S];
optional bool               infight     = 2;    // 战斗中
optional int32              cityid      = 3;    // 城镇id
optional int32              hole        = 4;    // 洞
optional int32              bossid      = 5;    // bossID
optional int32              credit      = 6;    // 积分
}

message MessageSceneMonsterGoCopyBossInFightNotify
{
optional eMessageScene      id          = 1     [default = eMessageScene_MonsterGoCopyBossInFight_S];
optional int32              hp          = 2;    // 本次战斗boss血量
}

message MessageSceneEnterMonsterTowerCopyRequest
{
optional eMessageScene      id          = 1     [default = eMessageScene_EnterMonsterTowerCopy_C];
optional int32              towerid     = 2;    // 塔id
optional int32              floorid     = 3;    // 层id
optional int32              doorsid     = 4;    // 门id
}

message MessageSceneMonsterTowerCopyNotify
{
optional eMessageScene 		id 			= 1 	[default = eMessageScene_EnterMonsterTowerCopy_S];
optional int32 				floor 		= 2;	// 层
}

message MessageSceneComebackZoneRequest
{
optional eMessageScene      id          = 1 [default = eMessageScene_ComebackZone_C ];
}

message MessageLeaveScene
{
optional eMessageScene 		id 			= 1 [default = eMessageScene_LeaveScene_S];
}

message MessageSceneEnterWestPreachCopyRequest
{
optional eMessageScene      id          = 1 [default = eMessageScene_EnterWestPreachCopy_C];
optional string             opponentid  = 2; // 被劫镖的人
}
