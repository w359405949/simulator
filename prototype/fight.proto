package msg.fight;
import "fighttype.proto";

//
// 命令字定义
//
enum eMessageFight
{
eMessageFight_Walk_CS		= 0x2001; 	// 走路命令
eMessageFight_Run_CS		= 0x2002; 	// 跑步命令
eMessageFight_Jump_CS		= 0x2003; 	// 跳跃命令
eMessageFight_Direct_CS		= 0x2004; 	// 方向变更命令
eMessageFight_Attack_CS		= 0x2005; 	// 攻击命令
eMessageFight_Skill_CS		= 0x2006; 	// 技能命令
eMessageFight_Trump_CS		= 0x2007; 	// 法宝命令
eMessageFight_Ready_CS		= 0x2008; 	// 预备命令
eMessageFight_Hosting_CS	= 0x2009; 	// 托管命令
eMessageFight_Blood_S		= 0x2010; 	// 扣血命令
eMessageFight_Die_S			= 0x2011; 	// 死亡命令
eMessageFight_Dying_C		= 0x2012; 	// 要死命令
eMessageFight_Death_C		= 0x2013; 	// 躺尸命令
eMessageFight_WaitResult_C 	= 0x2014;	// 等待结果命令
eMessageFight_Hit_C			= 0x2020; 	// 击打指令
eMessageFight_Buffer_C		= 0x2021;	// Buffer指令
eMessageFight_Pickup_C		= 0x2022;	// 拾取指令
eMessageFight_Revive_S		= 0x2023;	// 复活指令
eMessageFight_Result_S		= 0x2030;	// 战斗结果
eMessageFight_Calculate_S	= 0x2031;	// 战斗结算
eMessageFight_Leave_S		= 0x2032;	// 离开战斗
eMessageFight_Suspend_S		= 0x2033;	// 终止同步
eMessageFight_Wait4Revive_S = 0x2034;	// 等待复活
eMessageFight_Destroy_S		= 0x2035;	// 全部死亡
eMessageFight_FightCalulate_S = 0x2036; // 战斗结算
}

//走路指令
message MessageWalkCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Walk_CS];
optional string			unitid		= 2;	// 玩家ID
}

//跑步指令
message MessageRunCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Run_CS];
optional string			unitid		= 2;	// 玩家ID
}

//跳跃指令
message MessageJumpCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Jump_CS];
optional string			unitid		= 2;	// 玩家ID
}

//方向变更指令
message MessageDirectCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Direct_CS];
optional string			unitid		= 2;	// 玩家ID
optional int32			dir			= 3;	// 方向标记
}

//攻击指令
message MessageAttackCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Attack_CS];
optional string			unitid		= 2;	// 玩家ID
}

//技能指令
message MessageSkillCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Skill_CS];
optional string			unitid		= 2;	// 玩家ID
optional string 		type		= 3;	// 技能类型
}

//法宝指令
message MessageTrumpCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Trump_CS];
optional string			unitid		= 2;	// 玩家ID
}

//预备指令
message MessageReadyCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Ready_CS];
optional string			unitid		= 2;	// 玩家ID
}

//血量变更指令
message MessageBloodCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Blood_S];
optional FightUnitInfo	unit		= 2;	// 战斗单位
optional int32	 		blood		= 3;	// 剩余血量
}

//死亡指令
message MessageDieCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Die_S];
optional FightUnitInfo	unit		= 2;	// 战斗单位
}

//要死指令
message MessageDyingCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Dying_C];
optional FightUnitInfo  killer		= 2;	// 杀手
optional FightUnitInfo	dead		= 3;	// 死者
}

//躺尸指令
message MessageDeathCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Death_C];
}

// 等待结果
message MessageWaitResultCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_WaitResult_C];
optional int32 			timestamp	= 2;	// 时间戳
}

//客户端托管
message MessageHostingCommand
{
optional eMessageFight 	id   		= 1		[default = eMessageFight_Hosting_CS];
optional string			unitid		= 2;	// 玩家ID
optional bool			enabled		= 3;	// 是否激活的
}

//击打消息包
message MessageHitCommand
{
optional eMessageFight 		id			= 1		[default = eMessageFight_Hit_C];
repeated FightHitInfo		list		= 2;	// 击打列表
}

//Buffer消息包
message MessageBufferCommand
{
optional eMessageFight 		id			= 1		[default = eMessageFight_Buffer_C];
optional FightUnitInfo		caster		= 2;	// 施术者
repeated FightUnitInfo		agentList	= 3;	// 作用者
optional int32				buffer		= 4;	// 状态效果ID
optional int32				time		= 5;	// 触发时间
}

//拾取指令
message MessagePickupCommand
{
optional eMessageFight			id		= 1		[default = eMessageFight_Pickup_C];
optional FightUnitInfo			picker	= 2;	// 拾取者
optional int32					prop	= 3;	// 道具ID
}

//复活指令
message MessageReviveCommand
{
optional eMessageFight			id		= 1		[default = eMessageFight_Revive_S];
optional string					unitid	= 2;	// 玩家ID
}

//战斗结果
message MessageResultCommand
{
optional eMessageFight 	id			= 1		[default = eMessageFight_Result_S];
optional eFightResult	result		= 2;	// 结果
}

//战斗结算
message MessageCalculateCommand
{
optional eMessageFight 		id			= 1		[default = eMessageFight_Calculate_S];
optional int32				maxhitnumer	= 2;	// 最大连击数
optional int32				damagerate	= 3;	// 连击伤害比例
optional int32				passtime	= 4;	// 通关时间(ms)
optional eFightScoreLevel	score		= 5;	// 评分
optional int32				awardsexp	= 6;	// 获得的经验奖励
optional int32				awardscoin	= 7;	// 获得的金币奖励
optional int32				awardsxiuwei= 8;	// 获得的修为奖励
repeated ItemUnits          awarditems  = 9;    // 获得的道具奖励
}

// 战斗结算
message MessageFightCalculateCommand
{
optional eMessageFight      id          = 1     [default = eMessageFight_FightCalulate_S];
repeated ItemUnits          items       = 2;    // 道具信息
repeated PropUnits          props       = 3;    // 资源属性
}

//离开战斗
message MessageLeaveCommand
{
optional eMessageFight 		id			= 1		[default = eMessageFight_Leave_S];
optional string				unitid		= 2;	// 离开的玩家ID
}

//取消同步
message MessageSuspendCommand
{
optional eMessageFight 		id			= 1		[default = eMessageFight_Suspend_S];
optional string				unitid		= 2;	// 需要取消同步的玩家ID
}

// 等待复活指令
message MessageWait4ReviveCommand
{
optional eMessageFight 		id 			= 1 	[default = eMessageFight_Wait4Revive_S];
optional int32 				seconds  	= 2;	// 等待时间
}

// 全部死亡
message MessageDestroyCommand
{
optional eMessageFight 		id 			= 1 	[default = eMessageFight_Destroy_S];
}
