package msg.social;
import "socialtype.proto";

//
// 命令字定义
//
enum eMessageSocial
{

// 获取社会关系
eMessageSocial_GetSocialRelation_C			= 0x1600;		// 获取社会关系
eMessageSocial_GetSocialRelation_S			= 0x1601;		// 社会关系返回

// 添加好友
eMessageSocial_AddFriend_C					= 0x1602;		// 添加好友
eMessageSocial_AddFriend_S					= 0x1603;		// 添加好友(服务器返回)

// 删除好友
eMessageSocial_DelFriend_C					= 0x1604;		// 删除好友
eMessageSocial_DelFriend_S					= 0x1605;		// 删除好友(服务器返回)

// 添加黑名单
eMessageSocial_AddBlock_C					= 0x1606;		// 添加黑名单
eMessageSocial_AddBlock_S					= 0x1607;		// 添加黑名单(服务器返回)

// 解除黑名单
eMessageSocial_DelBlock_C					= 0x1608;		// 解除黑名单
eMessageSocial_DelBlock_S					= 0x1609;		// 解除黑名单(服务器返回)

// 好友祝福
eMessageSocial_WishFriend_C					= 0x160A;		// 好友祝福
eMessageSocial_WishFriend_S					= 0x160B;		// 好友祝福(服务器返回)
eMessageSocial_WishFriend_N					= 0x160C;		// 通知好友祝福

// 在线同意添加好友
eMessageSocial_AgreeAddFriend_C				= 0x160D;		// 同意对方添加好友顺便也加为自己好友
eMessageSocial_AddFriend_R					= 0x160E;		// 添加好友(服务器返回)
eMessageSocial_AgreeAddFriend_S             = 0x160F;       // 同意对方添加好友( 服务器返回 )

}

//
// 错误码定义
//
enum eErrorCodeSocial
{
eErrorCodeSocial_Success					= 0x000000;		// 成功

// 添加好友
eErrorCodeSocial_NoRoleInWorld				= 0x160201;		// 查无此人
eErrorCodeSocial_AddFriendFailed			= 0x160202;		// 天际好友失败
eErrorCodeSocial_InFriend					= 0x160203;		// 玩家在好友名单中
eErrorCodeSocial_InBlock					= 0x160204;		// 玩家在好友黑名单中
eErrorCodeSocial_FriendCountOver			= 0x160205;		// 好友个数已满
eErrorCodeSocial_InRelation					= 0x160206;		// 玩家已有社会关系
eErrorCodeSocial_NotAddMySelf				= 0x160207;		// 不能添加自己为好友

eErrorCodeSocial_NoRoleInWorld0C			= 0x160C01;		// 查无此人
eErrorCodeSocial_NotMyFriend				= 0x160401;		// 不是自己好友

eErrorCodeSocial_InFriend06					= 0x160601;		// 玩家在好友名单中
eErrorCodeSocial_InBlock06					= 0x160602;		// 玩家在黑名单中
eErrorCodeSocial_BlockCountOver				= 0x160603;		// 黑名单个数已满
eErrorCodeSocial_NotAddMySelfBlock			= 0x160604;		// 不能添加自己为黑名单

eErrorCodeSocial_NotInBlock08				= 0x160802;		// 玩家不在黑名单中

eErrorCodeSocial_NotFriendNoWish			= 0x160A00;		// 玩家不在好友中
eErrorCodeSocial_HasWish					= 0x160A01;		// 今日已经祝福
eErrorCodeSocial_NoGreetNums				= 0x160A02;		// 问候次数已用完
eErrorCodeSocial_NoRelation					= 0x160A03;		// 不是好友无法祝福
}

message MessageGetSocialRelationRequest
{
optional eMessageSocial		id					= 1	[default = eMessageSocial_GetSocialRelation_C];
}
message MessageGetSocialRelationResponse
{
optional eMessageSocial 	id					= 1	[default = eMessageSocial_GetSocialRelation_S];
optional int32              wishcount           = 2;    // 祝福次数
repeated SocialInfo			info				= 3;	// 好友信息
}

message MessageAddFriendRequest
{
optional eMessageSocial		id					= 1 [default = eMessageSocial_AddFriend_C];
required string				rolename			= 2;	// 好友名称
}

message MessageAddFriendNotice
{
optional eMessageSocial		id					= 1	[default = eMessageSocial_AddFriend_S];
required string				unitid				= 2; // 添加人id
required string				rolename			= 3; // 添加人姓名
}

message MessageAddFriendResponse
{
optional eMessageSocial		id					= 1	[default = eMessageSocial_AddFriend_R];
required SocialInfo			info				= 2;// 好友信息
}

message MessageAgreeAddFriendRequest
{
optional eMessageSocial		id					= 1 [default = eMessageSocial_AgreeAddFriend_C];
required string				unitid				= 2; // 添加好友人id
required string				rolename			= 3; // 添加好友人名字
}

message MessageAgreeAddFriendResponse
{
optional eMessageSocial     id                  = 1 [default = eMessageSocial_AgreeAddFriend_S];
required SocialInfo         info                = 2; // 好友信息
}

message MessageDelFriendRequest
{
optional eMessageSocial		id					= 1	[default = eMessageSocial_DelFriend_C];
required string				unitid				= 2;	// 删除玩家好友id
}

message MessageDelFriendResponse
{
optional eMessageSocial		id					= 1	[default = eMessageSocial_DelFriend_S];
required string				unitid				= 2;	// 删除玩家好友id
}

message MessageAddBlockRequest
{
optional eMessageSocial		id					= 1 [default = eMessageSocial_AddBlock_C];
required string				rolename			= 2;	// 玩家名称
}

message MessageAddBlockResponse
{
optional eMessageSocial		id					= 1 [default = eMessageSocial_AddBlock_S];
required SocialInfo			info				= 2;// 黑名单信息
}

message MessageDelBlockRequest
{
optional eMessageSocial		id					= 1 [default = eMessageSocial_DelBlock_C];
required string				unitid				= 2;	// 黑名单玩家id
}

message MessageWishFriendRequest
{
optional eMessageSocial		id					= 1 [default = eMessageSocial_WishFriend_C];
required string				unitid				= 2;	// 好友id
}

message MessageWishFriendResponse
{
optional eMessageSocial		id					= 1 [default = eMessageSocial_WishFriend_S];
required string				friendid			= 2;	// 好友id
}

message MessageWishFriendNotify
{
optional eMessageSocial		id					= 1 [default = eMessageSocial_WishFriend_N];
required string				friendid			= 2;	// 祝福我的id
}

